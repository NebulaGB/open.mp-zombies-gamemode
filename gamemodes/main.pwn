/*
	All authors in this gamemode
	
	-> Vyn aka Luminouz | Creator Of Gamemode
	- Kitten aka AaronNader96 | Saurce Of Mapping in this Gamemode
	-> Kazujixcl aka Kendrick | Port to open.mp gamemode

	Spesial Thanks to
	- Southclaws
	- Y_Less
	- BlueG
	- ZeeX
	- and all constributor of open.mp

*/

#define			CGEN_MEMORY			40000
#define 		MAX_ZOMBIES 		650
#define			SAN_ANDREAS
#define			MAX_LOOT			20000
#define			MAX_INVENTORY		20
#define			MAX_HUNTER			50
#define			MAX_DEERS			50

#include <open.mp>

#include <YSI_Coding\y_timers>
#include <YSI_Server\y_colours>
#include <YSI_Game\y_vehicledata>
#include <foreach>
#include <a_mysql>
#include <sscanf2>
#include <zcmd>
#include <streamer>
#include <crashdetect>
#include <zcmd>
#include <samp_bcrypt>

#include ".\enum.inc"

main() {

}

#define function%0(%1) forward %0(%1); public %0(%1)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define Server(%0,%1) SendClientMessageEx(%0, X11_GREY, "* "%1)

/* Connector MySQL*/

#define DATABASE_ADDRESS "localhost"
#define DATABASE_USERNAME "root"
#define DATABASE_PASSWORD ""
#define DATABASE_NAME "tlos"

/* Variable */

new MySQL:sql_c;

new Float:randomSpawns[][] =
{
	{2860.7 ,-218.39999 ,11.3},
	{1655.7 ,-2752.0 ,5.4},
	{522.59998 ,-1896.6 , 2.0},
	{-149.89999 ,-2350.0 ,27.6},
	{-2401.1001 ,-2826.3 ,3.0},
	{-2957.2 ,-1355.9 ,7.6},
	{-2904.3999 ,86.6 ,4.0},
	{-2767.2 ,2787.6001 ,223.7},
	{-1121.4 ,2839.6001 ,53.7},
	{114.5 ,2915.1001 ,48.5},
	{1048.0 ,2909.1001 ,47.8},
	{2963.8999 ,1147.3 ,30.2},
	{1624.4 ,423.29999 ,14.9},
	{182.0 ,150.10001 ,1.7},
	{-770.09998 ,208.2 ,2.1},
	{-339.39999 ,-421.29999 ,5.2},
	{-586.09998 ,-1503.5 ,10.1},
	{-89.0351,-1564.9932,3.0043,105.2555},
	{-88.2427,-1202.1268,2.8906,295.5774},
	{-359.7300,-1042.5619,59.3953,151.4224},
	{-583.7015,-1056.2892,23.1733,220.9766},
	{-572.4352,-1498.3156,9.5611,315.5179},
	{-365.9491,-1418.1000,25.7266,197.9067},
	{-1097.9579,-1622.5590,76.3672,62.8151},
	{-1059.6812,-1193.8805,129.2188,87.8313},
	{-1434.7700,-1496.1621,101.7292,186.8205},
	{-1845.9764,-1707.5901,41.1129,25.4613},
	{-2204.0164,-2309.8787,31.3750,49.2681}
};


static const Float:LOOT_POS_RANDOM[][] =
{
	{-2105.1796875,659.5048828125,52.476016998291},
	{-2122.7890625,660.1171875,52.494960784912},
	{-2161.1806640625,660.69140625,52.440773010254},
	{-2156.9794921875,715.134765625,69.5625},
	{-2540.779296875,831.962890625,52.09375},
	{-2543.5556640625,922.765625,67.09375},
	{-2553.427734375,985.7685546875,78.2734375},
	{-2719.1953125,-318.9580078125,7.84375},
	{-2791.75,-160.4765625,10.0546875},
	{-2784.1376953125,-99.5029296875,10.0546875},
	{-2730.771484375,-174.17578125,7.203125},
	{-2677.7392578125,-179.662109375,4.328125},
	{-2689.53125,-141.2802734375,7.203125},
	{-2723.15234375,-113.3740234375,7.203125},
	{-2632.52734375,-108.0048828125,4.328125},
	{-2679.94140625,-155.75,4.328125},
	{-2632.181640625,-191.0283203125,7.203125},
	{-2619.455078125,-153.2880859375,4.3359375},
	{-2590.529296875,-106.01953125,4.3296241760254},
	{-2733.2177734375,-109.572265625,4.328125},
	{-2782.1259765625,-148.6162109375,7.1872329711914},
	{-2791.7412109375,-24.3642578125,10.0546875},
	{2416.958984375,-2454.0576171875,13.640612602234},
	{-2781.07421875,-26.6162109375,7.3766598701477},
	{-2734.8994140625,-53.6279296875,4.3354206085205},
	{-2731.0927734375,-12.6806640625,7.203125},
	{-2725.55078125,-36.1650390625,7.1953125},
	{-2724.6787109375,-57.98828125,4.3425788879395},
	{-2781.7265625,21.095703125,7.1796875},
	{-2734.1474609375,25.7275390625,4.3353595733643},
	{-2790.44921875,7.244140625,7.1953125},
	{-2723.0166015625,21.908203125,7.203125},
	{-2664.251953125,-8.732421875,6.1328125},
	{-2718.8681640625,52.302734375,4.3359375},
	{-2689.376953125,74.5224609375,7.203125},
	{2273.20703125,-2371.5419921875,17.421871185303},
	{-2686.9892578125,115.25,7.1953125},
	{-2677.7412109375,132.431640625,4.335750579834},
	{-2681.5703125,91.333984375,7.203125},
	{-2679.9130859375,68.3857421875,4.328125},
	{2447.8544921875,-2209.4921875,26.6328125},
	{-2631.6923828125,57.8232421875,4.328125},
	{-2631.8662109375,105.4345703125,4.5250973701477},
	{-2620.9384765625,120.8359375,7.203125},
	{-2622.375,71.7958984375,4.3359375},
	{-2619.466796875,57.779296875,4.3359375},
	{-2620.7958984375,103.37890625,7.203125},
	{-2791.6767578125,77.447265625,10.0546875},
	{-2791.6845703125,103.6552734375,10.0546875},
	{-2791.6201171875,130.3515625,7.859375},
	{-2783.59765625,138.4697265625,10.0546875},
	{-2781.361328125,91.9453125,7.1796875},
	{-2783.810546875,189.72265625,10.0546875},
	{-2780.9443359375,210.013671875,7.3766598701477},
	{-2791.7958984375,212.0029296875,10.0546875},
	{-2789.4150390625,183.896484375,10.0625},
	{-2720.626953125,127.52734375,7.0390625},
	{-2689.21484375,96.3095703125,7.203125},
	{-2760.80078125,142.8271484375,7.03125},
	{-2632.37890625,274.76953125,4.3347663879395},
	{-2624.2607421875,250.9365234375,4.5094723701477},
	{-2654.486328125,200.240234375,5.0},
	{-2678.177734375,200.3193359375,7.1953125},
	{-2683.3466796875,192.1875,7.1953125},
	{-2654.3681640625,190.7880859375,4.328125},
	{-2627.869140625,179.1484375,4.3401975631714},
	{-2621.79296875,168.8271484375,7.1953125},
	{2529.234375,-2250.3193359375,3.0},
	{-2649.146484375,376.1025390625,6.1592502593994},
	{-2766.4765625,375.21875,6.3346824645996},
	{-2729.5869140625,351.921875,4.7109375},
	{-2620.99609375,-185.7578125,7.203125},
	{-2558.9501953125,-199.0283203125,10.887868881226},
	{-2515.1201171875,-172.2314453125,25.078411102295},
	{-2541.33203125,-145.84765625,15.688335418701},
	{-2524.0888671875,-79.9541015625,21.780969619751},
	{2138.8505859375,-2292.7666015625,14.780059814453},
	{2122.322265625,-2268.7783203125,20.671875},
	{2229.953125,-2286.5478515625,14.375131607056},
	{-2538.826171875,44.474609375,8.608250617981},
	{2226.75,-2262.5888671875,13.554685592651},
	{-2507.6923828125,51.005859375,25.623983383179},
	{-2588.2236328125,59.15625,4.3359375},
	{-2591.5322265625,170.0634765625,4.6730613708496},
	{-2577.947265625,104.255859375,4.3359375},
	{-2545.4833984375,193.333984375,13.0390625},
	{2021.88671875,-2067.1806640625,17.357158660889},
	{2043.19140625,-2124.6103515625,13.6328125},
	{-2454.6328125,-135.880859375,26.191104888916},
	{1926.3515625,-2127.6796875,13.579386711121},
	{-2432.1279296875,-182.7470703125,35.3125},
	{-2431.5146484375,-109.6416015625,35.3203125},
	{-2430.8583984375,9.8046875,35.318264007568},
	{1990.486328125,-1998.98046875,13.546875},
	{1940.0703125,-2038.7099609375,13.546875},
	{1936.3857421875,-1983.3828125,13.546875},
	{-2545.384765625,118.939453125,22.140625},
	{-2488.7578125,130.7890625,25.8671875},
	{-2463.4296875,131.7529296875,35.171875},
	{2201.9130859375,-1971.7041015625,13.78413105011},
	{-2548.392578125,194.8271484375,6.2325587272644},
	{-2579.7734375,309.8671875,5.1796875},
	{2280.111328125,-2046.1591796875,13.546875},
	{-2571.2275390625,246.6923828125,10.380719184875},
	{-2622.861328125,375.8916015625,6.1592502593994},
	{-2594.951171875,458.486328125,14.609375},
	{2431.83203125,-2137.091796875,13.546875},
	{2527.3076171875,-2129.2861328125,13.546875},
	{-2425.6650390625,338.533203125,36.99991607666},
	{-2228.8994140625,253.7900390625,35.3203125},
	{-2183.375,199.9150390625,35.3203125},
	{-2219.51171875,100.3720703125,35.3203125},
	{1951.85546875,-2187.693359375,13.546875},
	{-2200.306640625,-79.642578125,35.3203125},
	{-2218.875,-180.6923828125,35.365856170654},
	{-2270.1845703125,-156.142578125,35.3203125},
	{1083.7578125,-2033.1240234375,69.0078125},
	{1122.390625,-2043.921875,74.4296875},
	{1121.125,-2007.8056640625,74.4296875},
	{1815.701171875,-1976.759765625,13.546875},
	{1831.8251953125,-1996.826171875,13.546875},
	{1731.6982421875,-2055.0126953125,13.572721481323},
	{1673.8896484375,-2122.5712890625,14.146014213562},
	{1694.28515625,-2082.1337890625,13.546875},
	{1714.8828125,-2125.41015625,14.056648254395},
	{1762.29296875,-2102.0341796875,13.856951713562},
	{1804.908203125,-2141.689453125,13.546875},
	{1846.451171875,-2021.099609375,13.546875},
	{1863.1640625,-2019.9775390625,13.546875},
	{1858.8203125,-2080.7197265625,15.03125},
	{1870.9697265625,-2020.482421875,13.546875},
	{1899.0322265625,-1997.6650390625,13.546875},
	{1920.576171875,-2086.7236328125,13.577843666077},
	{-2177.2421875,10.7216796875,35.3203125},
	{-2027.69140625,-40.7685546875,38.8046875},
	{1846.9462890625,-2116.369140625,15.170427322388},
	{1894.630859375,-2133.23046875,15.466326713562},
	{-2171.7919921875,250.6259765625,35.336006164551},
	{2333.375,-1943.3095703125,14.96875},
	{-2242.1787109375,122.328125,35.3203125},
	{2387.0634765625,-1941.490234375,13.546875},
	{-2265.8994140625,33.01953125,35.3203125},
	{-2287.04296875,-79.845703125,35.3203125},
	{-2313.0947265625,-11.6533203125,35.3203125},
	{2437.9951171875,-2020.248046875,13.902541160583},
	{2515.3583984375,-2027.7763671875,13.546875},
	{2526.203125,-2000.7529296875,13.78261089325},
	{-1968.5322265625,110.001953125,27.6875},
	{-2025.8759765625,-101.044921875,35.1640625},
	{2635.2255859375,-1993.6181640625,13.993547439575},
	{2660.84375,-1984.49609375,13.550971984863},
	{2673.8603515625,-2020.2509765625,14.168166160583},
	{-2080.7451171875,-407.314453125,38.734375},
	{-1993.1416015625,-443.4228515625,38.734375},
	{2786.7822265625,-1922.8232421875,17.3203125},
	{2751.5166015625,-1950.9462890625,13.546875},
	{2736.0234375,-1974.9482421875,13.546034812927},
	{2728.2529296875,-1919.462890625,13.539363861084},
	{-1709.1103515625,406.3779296875,7.4189829826355},
	{-1923.2841796875,433.2978515625,35.254241943359},
	{2333.525390625,-1883.5400390625,15.0},
	{2332.294921875,-1922.615234375,12.300741195679},
	{-2054.3359375,457.095703125,35.300045013428},
	{2296.49609375,-1883.05078125,14.234375},
	{2261.166015625,-1906.74609375,14.9375},
	{-2106.7265625,338.134765625,35.171875},
	{-2214.21875,493.427734375,35.171875},
	{-2093.103515625,513.841796875,35.171875},
	{-1940.0380859375,555.080078125,35.171875},
	{-1807.3115234375,531.25390625,35.539566040039},
	{-1605.6103515625,710.2880859375,13.8671875},
	{1869.5263671875,-1913.0859375,15.256797790527},
	{1850.52734375,-1914.865234375,15.256797790527},
	{1847.662109375,-1870.5869140625,13.578125},
	{1789.375,-1871.720703125,13.564960479736},
	{-1729.24609375,650.0126953125,25.110088348389},
	{-1929.267578125,639.1357421875,46.5625},
	{-1619.111328125,867.921875,7.6953125},
	{-1493.103515625,886.2890625,7.1875},
	{-1447.17578125,919.0634765625,7.1875},
	{-1703.9638671875,785.5986328125,25.736047744751},
	{-1749.3125,873.0576171875,25.0859375},
	{1488.2373046875,-1911.6669921875,24.190805435181},
	{1438.9794921875,-1918.8115234375,24.416709899902},
	{-1786.2587890625,772.7470703125,24.890625},
	{1453.3564453125,-1885.36328125,23.1484375},
	{-1967.392578125,743.8095703125,45.4453125},
	{-2099.3818359375,602.53125,45.096294403076},
	{1489.544921875,-1847.30078125,13.546875},
	{1450.00390625,-1848.8515625,13.96875},
	{1470.18359375,-1770.9287109375,18.795755386353},
	{1493.5146484375,-1772.1767578125,18.795755386353},
	{-2208.333984375,695.2158203125,49.4375},
	{1338.7646484375,-1777.2900390625,13.538893699646},
	{1378.732421875,-1753.1376953125,14.140625},
	{1352.4580078125,-1758.0810546875,13.5078125},
	{1337.400390625,-1819.83203125,13.550866127014},
	{1213.8720703125,-1815.3349609375,16.59375},
	{1212.9775390625,-1811.822265625,16.59375},
	{1209.6083984375,-1751.4228515625,13.593654632568},
	{-2800.16015625,374.880859375,6.3359375},
	{1144.279296875,-1765.66796875,13.612593650818},
	{1170.3505859375,-1862.4501953125,13.772918701172},
	{-2456.1337890625,504.0732421875,30.078125},
	{-2347.4150390625,495.97265625,30.641031265259},
	{1020.33984375,-1901.1484375,12.666422843933},
	{-2280.0615234375,654.4853515625,49.4453125},
	{984.8310546875,-1830.962890625,13.333910942078},
	{-2368.8896484375,711.55078125,35.17308807373},
	{960.322265625,-1823.7724609375,13.328245162964},
	{-2213.8408203125,720.77734375,49.40625},
	{-2168.5458984375,821.1298828125,64.973213195801},
	{791.4951171875,-1753.921875,13.443346977234},
	{768.275390625,-1745.72265625,13.077295303345},
	{718.2763671875,-1783.91015625,13.6328125},
	{572.25,-1765.8583984375,14.398722648621},
	{-2340.1103515625,796.7646484375,41.989013671875},
	{568.712890625,-1762.2470703125,5.8157567977905},
	{-2447.6240234375,821.5927734375,35.1796875},
	{-2541.2744140625,733.4091796875,28.056119918823},
	{-2661.5478515625,722.1953125,27.961761474609},
	{499.326171875,-1870.8916015625,4.6769704818726},
	{-2864.9677734375,681.51953125,23.460912704468},
	{674.787109375,-1867.716796875,5.4609375},
	{-2888.5,794.6943359375,35.03125},
	{-2868.1318359375,836.2431640625,39.5078125},
	{-2840.15234375,884.6396484375,44.0546875},
	{-2844.4931640625,921.5751953125,44.0546875},
	{399.6533203125,-2068.6455078125,10.745077133179},
	{-2866.0341796875,957.32421875,44.0546875},
	{400.513671875,-2065.7412109375,10.748622894287},
	{361.294921875,-2072.01171875,10.6953125},
	{-2907.2626953125,1026.990234375,36.828125},
	{-2900.716796875,1080.826171875,32.1328125},
	{-2905.2587890625,1171.9189453125,13.6640625},
	{314.0048828125,-1771.341796875,4.6501817703247},
	{290.4140625,-1764.025390625,4.546875},
	{171.2255859375,-1769.328125,4.4670028686523},
	{160.7001953125,-1766.35546875,6.796875},
	{-2738.3203125,746.625,49.189296722412},
	{-2738.578125,801.5126953125,53.0625},
	{-2651.9990234375,826.8935546875,49.984375},
	{-2687.60546875,803.1123046875,49.9765625},
	{-2652.7548828125,731.8720703125,27.957878112793},
	{-2656.0595703125,695.287109375,27.935955047607},
	{-2638.3505859375,728.234375,27.965827941895},
	{-2640.048828125,730.693359375,30.075717926025},
	{-2622.501953125,783.1640625,44.859375},
	{1780.7333984375,-1705.94140625,13.5234375},
	{1699.734375,-1665.74609375,20.205995559692},
	{-2620.67578125,855.5283203125,53.568695068359},
	{-2657.369140625,848.6103515625,64.0078125},
	{-2653.2548828125,851.5947265625,64.014892578125},
	{2018.19921875,-1703.623046875,14.234375},
	{-2580.666015625,920.36328125,64.984375},
	{-2542.490234375,943.21875,64.0},
	{-2511.763671875,1020.671875,77.212951660156},
	{-2572.8955078125,1155.013671875,55.734909057617},
	{-2523.896484375,1142.6962890625,55.7265625},
	{-2486.3193359375,1141.9541015625,55.7265625},
	{-2430.7255859375,1140.1650390625,55.7265625},
	{-2385.4306640625,1135.0029296875,55.7265625},
	{-2534.14453125,1150.4560546875,55.606960296631},
	{-2512.5712890625,1046.0087890625,65.512168884277},
	{-2576.6865234375,992.35546875,78.2734375},
	{-2648.087890625,952.1796875,71.959915161133},
	{-2641.10546875,935.6025390625,72.445816040039},
	{-2670.79296875,927.869140625,79.703125},
	{-2719.208984375,917.32421875,67.600875854492},
	{-2711.130859375,968.6748046875,54.4609375},
	{-2737.0263671875,846.4697265625,59.27278137207},
	{-2620.1806640625,833.017578125,52.09375},
	{-2593.2373046875,883.4677734375,63.25},
	{-2413.0849609375,920.875,45.495388031006},
	{-2369.90625,846.65234375,43.7890625},
	{-2370.494140625,770.8046875,35.045497894287},
	{-2309.7568359375,720.7900390625,49.4140625},
	{-1706.255859375,29.8837890625,3.5546875},
	{-2017.7783203125,331.3955078125,35.171875},
	{-2627.091796875,2319.1240234375,8.3104915618896},
	{-2627.53125,2310.21484375,8.3140296936035},
	{-2639.546875,2349.1591796875,8.4840850830078},
	{-2159.2314453125,753.7568359375,69.514846801758},
	{-2118.1787109375,795.80078125,69.568389892578},
	{-2056.2685546875,820.6025390625,60.074989318848},
	{-1947.0849609375,790.0537109375,55.724136352539},
	{-1956.5302734375,766.6357421875,55.725494384766},
	{-1986.2353515625,660.1337890625,46.568286895752},
	{-1917.0634765625,671.431640625,46.5625},
	{-2291.9345703125,2282.28125,4.9792766571045},
	{-1880.5390625,822.62890625,35.177783966064},
	{-1951.2939453125,883.7041015625,38.50732421875},
	{-1953.09765625,824.728515625,42.5234375},
	{-2046.8876953125,896.4609375,53.115028381348},
	{-2099.5439453125,897.380859375,76.7109375},
	{-2116.9609375,927.802734375,86.079063415527},
	{-2159.5185546875,983.771484375,80.0},
	{-2041.9365234375,1020.5859375,54.677085876465},
	{-2017.599609375,984.314453125,47.962516784668},
	{-2126.052734375,832.546875,69.5625},
	{-2223.42578125,795.779296875,49.434646606445},
	{-2285.2978515625,829.1748046875,57.170230865479},
	{-2234.142578125,888.5244140625,66.652717590332},
	{-2294.791015625,969.9736328125,65.334289550781},
	{-2333.3525390625,943.3544921875,53.981349945068},
	{-2448.248046875,972.8310546875,45.296875},
	{1097.2744140625,-1829.2568359375,16.59375},
	{-2351.78125,1226.12109375,33.065242767334},
	{-2383.1181640625,1262.92578125,26.330062866211},
	{-2383.13671875,1337.3291015625,12.704105377197},
	{-2433.76171875,1247.7568359375,33.543380737305},
	{-2477.1708984375,1287.291015625,22.71538734436},
	{-2433.0810546875,1338.123046875,8.5078125},
	{-2598.787109375,2357.36328125,9.8829956054688},
	{-2597.97265625,2364.6982421875,9.8829956054688},
	{-2624.841796875,1412.529296875,7.09375},
	{-2582.083984375,2300.3154296875,7.0028858184814},
	{-2582.58984375,2306.712890625,7.0028858184814},
	{945.75,-1742.5810546875,13.554628372192},
	{-2662.4541015625,1423.625,23.8984375},
	{-2473.466796875,2404.85546875,16.666370391846},
	{-2467.2998046875,2409.001953125,16.666431427002},
	{-2660.6474609375,1423.822265625,23.8984375},
	{-2558.138671875,2261.3583984375,5.0616064071655},
	{-2518.8916015625,2236.94140625,5.1875},
	{-2510.9248046875,1053.482421875,65.184410095215},
	{-2564.291015625,992.2587890625,78.2734375},
	{-2503.2177734375,2366.169921875,4.9801826477051},
	{-2655.0634765625,985.83203125,64.991287231445},
	{952.8359375,-1750.529296875,16.09974861145},
	{-2707.033203125,864.4609375,70.703125},
	{-2708.3837890625,852.9736328125,70.703125},
	{-2737.572265625,866.14453125,64.6328125},
	{1083.5673828125,-1697.2802734375,13.546875},
	{-2706.9921875,722.8583984375,37.5390625},
	{793.9755859375,-1700.279296875,14.033567428589},
	{-2428.388671875,2368.30078125,5.4436712265015},
	{794.951171875,-1687.7119140625,14.463310241699},
	{-2372.560546875,614.0341796875,30.939836502075},
	{782.015625,-1661.9453125,13.43461894989},
	{-2325.4052734375,579.8740234375,30.298212051392},
	{-2386.3583984375,2398.0888671875,8.8520927429199},
	{768.0849609375,-1702.7763671875,5.1507549285889},
	{-2217.0009765625,577.939453125,35.171875},
	{-2379.6025390625,2443.66796875,10.169355392456},
	{-2386.43359375,2446.5810546875,10.169355392456},
	{-2188.6455078125,602.9736328125,35.1640625},
	{-2193.0634765625,647.4208984375,49.4375},
	{-2472.556640625,2450.2431640625,17.323022842407},
	{-2478.9404296875,2449.1982421875,17.323022842407},
	{-2479.0146484375,2488.603515625,18.229986190796},
	{-2128.3837890625,619.0263671875,51.888767242432},
	{693.546875,-1698.849609375,3.8148174285889},
	{-2446.072265625,2513.0029296875,15.700329780579},
	{694.7978515625,-1686.05859375,4.3461227416992},
	{-2093.90234375,746.4248046875,69.5625},
	{-2066.4052734375,755.412109375,71.890625},
	{-2048.7001953125,755.439453125,64.15625},
	{653.0830078125,-1719.681640625,14.760129928589},
	{-2047.9453125,786.7783203125,64.15625},
	{-2066.3515625,786.7685546875,71.890625},
	{850.7080078125,-1688.8798828125,14.9397315979},
	{851.0283203125,-1718.9765625,14.945223808289},
	{-2018.3974609375,784.58203125,45.4453125},
	{-2188.8427734375,2412.421875,5.15625},
	{-2016.20703125,897.4267578125,45.4453125},
	{890.72265625,-1637.328125,14.9296875},
	{862.80078125,-1637.8037109375,14.942176818848},
	{-1851.595703125,988.52734375,35.373413085938},
	{936.6318359375,-1613.9462890625,14.951719284058},
	{961.986328125,-1612.642578125,14.942341804504},
	{-1874.517578125,1002.9794921875,37.778400421143},
	{986.544921875,-1623.6884765625,14.9296875},
	{-1589.71875,2706.115234375,56.176181793213},
	{-1988.4599609375,1038.865234375,55.7265625},
	{-1603.8671875,2689.3701171875,55.285556793213},
	{982.1689453125,-1702.234375,14.964391708374},
	{-1550.9228515625,2699.6728515625,56.269931793213},
	{-2113.25390625,1042.162109375,71.52188873291},
	{-1569.30078125,2629.9853515625,55.840278625488},
	{954.8623046875,-1586.669921875,13.546875},
	{982.9990234375,-1613.4287109375,13.517053604126},
	{-2140.29296875,1190.37890625,55.7265625},
	{-1670.7763671875,2545.4189453125,85.322410583496},
	{-2065.986328125,1159.828125,46.6484375},
	{-1667.3193359375,2486.291015625,87.172271728516},
	{-2036.5498046875,1197.66015625,46.234375},
	{-1939.35546875,1227.6513671875,31.647394180298},
	{-2061.77734375,1232.759765625,31.436279296875},
	{-1482.40625,2702.3271484375,56.254306793213},
	{-1466.345703125,2692.7568359375,56.269931793213},
	{-1450.88671875,2690.876953125,56.176181793213},
	{-2152.6787109375,1248.7138671875,25.723867416382},
	{-2280.8388671875,1149.1005859375,61.609375},
	{-2238.50390625,1135.62890625,67.244506835938},
	{-2282.4140625,1070.03515625,81.70255279541},
	{-2239.7451171875,1037.275390625,83.849937438965},
	{-2238.796875,962.17578125,66.652183532715},
	{1182.35546875,-1635.0908203125,13.953125},
	{1165.14453125,-1648.408203125,14.0},
	{1208.0810546875,-1644.49609375,13.551703453064},
	{1230.158203125,-1610.78125,13.546875},
	{1286.142578125,-1583.453125,13.546875},
	{-2282.498046875,916.9443359375,66.6484375},
	{1258.1455078125,-1583.8603515625,13.546875},
	{1241.8994140625,-1582.005859375,13.487106323242},
	{-2210.7080078125,934.3779296875,69.044372558594},
	{1216.8056640625,-1582.8935546875,13.546875},
	{1184.6748046875,-1583.1826171875,13.553085327148},
	{-2174.1484375,902.669921875,80.0078125},
	{-2126.4375,1050.2275390625,80.0078125},
	{-2190.4404296875,1080.2470703125,80.0078125},
	{-2197.0576171875,1065.8515625,55.851322174072},
	{-1989.88671875,1118.2568359375,54.46875},
	{-1992.2333984375,1109.5595703125,53.215702056885},
	{1286.8515625,-1625.6796875,13.546875},
	{-1848.119140625,1082.5380859375,46.082084655762},
	{1213.7568359375,-1638.6787109375,11.796875},
	{-1836.1298828125,1054.5283203125,46.078125},
	{1215.1533203125,-1676.26953125,11.796875},
	{1215.4697265625,-1671.5966796875,11.796875},
	{1265.119140625,-1676.375,13.546875},
	{-1780.2353515625,1025.720703125,25.313758850098},
	{-1806.322265625,979.560546875,24.890625},
	{-1715.82421875,1017.95703125,17.917835235596},
	{-1707.888671875,1018.419921875,17.917835235596},
	{-1758.0185546875,963.916015625,24.897708892822},
	{-1750.4970703125,964.119140625,24.890625},
	{-1749.173828125,900.390625,25.0859375},
	{-1810.5966796875,902.7138671875,24.996131896973},
	{-1319.9130859375,2704.384765625,50.26628112793},
	{-1697.5947265625,885.3671875,25.085273742676},
	{-1694.443359375,951.7783203125,24.890625},
	{-1701.66015625,1083.7275390625,45.364379882812},
	{-1445.013671875,2652.4765625,56.269931793213},
	{-1685.2197265625,1042.7490234375,54.703125},
	{-1692.5009765625,1041.966796875,56.90625},
	{-1459.5888671875,2653.4716796875,55.8359375},
	{-1445.625,2636.2998046875,56.254306793213},
	{-1429.990234375,2583.6455078125,56.887584686279},
	{-1728.296875,1138.4921875,38.603340148926},
	{-1658.23046875,1208.2958984375,7.25},
	{-1657.8486328125,1206.876953125,13.671875},
	{-1683.8203125,1209.6943359375,21.15625},
	{-1651.9228515625,1203.73046875,13.671875},
	{-1549.92578125,1169.955078125,7.1875},
	{-1518.9580078125,1143.3271484375,7.1875},
	{-1519.568359375,2609.55859375,55.8359375},
	{-1466.28125,2610.453125,55.8359375},
	{-1681.125,1350.302734375,7.1721897125244},
	{-1677.6015625,1353.677734375,9.8046875},
	{-1663.9833984375,1406.296875,7.1796875},
	{-1629.1533203125,1388.310546875,7.1875},
	{-1670.7919921875,1339.8427734375,7.1875},
	{-1653.3564453125,1354.69921875,7.1859359741211},
	{-1513.2900390625,2645.880859375,56.176181793213},
	{-1783.3994140625,1537.8251953125,7.1875},
	{-1891.443359375,1447.9384765625,7.1848773956299},
	{-1956.7509765625,1345.25390625,7.1875},
	{-1929.7412109375,1374.978515625,7.1875},
	{-2043.798828125,1261.5126953125,9.1895523071289},
	{-1294.099609375,2524.6044921875,87.476791381836},
	{-1292.0693359375,2514.833984375,87.092361450195},
	{-1321.5791015625,2506.8232421875,89.5703125},
	{-1883.720703125,1299.7607421875,7.1796875},
	{-1844.009765625,1332.70703125,7.1796875},
	{-1798.103515625,1341.697265625,7.1796875},
	{-1756.755859375,1320.3828125,7.1875},
	{-1305.3330078125,2547.935546875,90.328125},
	{-1739.32421875,1304.216796875,7.1875},
	{-1711.357421875,1231.705078125,17.923469543457},
	{-1901.9736328125,1239.8623046875,26.131290435791},
	{-1643.0888671875,1172.935546875,7.1875},
	{-1774.6650390625,1113.638671875,45.4453125},
	{-1799.974609375,1206.595703125,25.125},
	{-1852.4931640625,1162.2333984375,40.940418243408},
	{-1901.9619140625,1222.646484375,33.744285583496},
	{-1929.982421875,1190.52734375,45.4453125},
	{-1997.3837890625,1190.546875,45.4453125},
	{-2189.0498046875,1163.9794921875,55.7265625},
	{-2238.091796875,1190.7646484375,55.725227355957},
	{-2238.314453125,1154.1728515625,59.692321777344},
	{-2297.9453125,1096.3759765625,79.853385925293},
	{-2281.9619140625,979.47265625,70.926986694336},
	{-2238.888671875,944.02734375,66.652183532715},
	{-2168.71875,743.857421875,64.96125793457},
	{-2128.3828125,690.29296875,65.523544311523},
	{-2279.830078125,587.888671875,37.236404418945},
	{-2339.8828125,679.787109375,38.392864227295},
	{-2158.6142578125,888.83203125,80.0078125},
	{-2129.673828125,943.015625,80.0},
	{-2124.7880859375,1104.759765625,79.541061401367},
	{-2054.5107421875,1194.177734375,45.457427978516},
	{-1828.90234375,1338.880859375,7.1796875},
	{-1693.0576171875,1249.966796875,7.189022064209},
	{2744.8359375,-2014.96875,13.5546875},
	{2801.4306640625,-1947.8447265625,17.3203125},
	{2763.845703125,-1823.1318359375,11.846822738647},
	{2804.529296875,-1774.9765625,11.84375},
	{2795.94140625,-1723.66796875,11.84375},
	{2674.6962890625,-1787.2060546875,11.84375},
	{2813.078125,-1644.232421875,10.883123397827},
	{2811.95703125,-1637.833984375,10.94800567627},
	{2821.515625,-1603.890625,11.084532737732},
	{2852.095703125,-1523.9375,11.153960227966},
	{2795.5498046875,-1539.826171875,10.921875},
	{2757.943359375,-1515.923828125,28.598701477051},
	{2683.8037109375,-1540.4609375,26.087358474731},
	{2668.0068359375,-1457.427734375,30.540340423584},
	{2764.3232421875,-1476.1640625,30.453125},
	{2751.1396484375,-1421.7392578125,32.046253204346},
	{2753.732421875,-1419.1005859375,39.3664894104},
	{2754.2275390625,-1384.1318359375,39.372711181641},
	{2773.6650390625,-1402.2998046875,24.7421875},
	{2710.2939453125,-1421.623046875,16.25},
	{2862.7451171875,-1441.4228515625,10.942241668701},
	{2792.15625,-1465.6298828125,40.0625},
	{2818.7421875,-1466.765625,32.125},
	{2794.216796875,-1427.798828125,20.21875},
	{2613.7705078125,-1394.43359375,34.931190490723},
	{2592.8203125,-1324.166015625,39.12483215332},
	{2590.294921875,-1321.5458984375,39.894317626953},
	{2752.2744140625,-1324.013671875,50.0},
	{2755.447265625,-1301.8134765625,53.09375},
	{2812.46875,-1287.7197265625,42.216262817383},
	{2780.1640625,-1289.623046875,42.632743835449},
	{2783.5634765625,-1333.5498046875,32.258140563965},
	{2812.142578125,-1332.0810546875,32.207908630371},
	{2778.802734375,-1365.7109375,24.604793548584},
	{2807.5556640625,-1369.9189453125,23.417491912842},
	{2853.2119140625,-1366.115234375,14.1640625},
	{2842.33984375,-1336.2236328125,14.742118835449},
	{2847.8857421875,-1309.1572265625,14.790662765503},
	{2809.2177734375,-1189.091796875,25.317050933838},
	{2807.9443359375,-1177.3212890625,25.378120422363},
	{2820.58203125,-1160.361328125,25.341686248779},
	{2793.703125,-1082.28125,30.71875},
	{2666.2001953125,-1107.6357421875,69.400970458984},
	{2629.4951171875,-1068.3662109375,69.617057800293},
	{2612.2919921875,-1081.6611328125,69.597839355469},
	{2610.4111328125,-1096.9375,69.514892578125},
	{2626.513671875,-1098.6513671875,69.367218017578},
	{2621.3955078125,-1119.2119140625,67.545845031738},
	{2614.283203125,-1202.2919921875,60.0},
	{2608.5859375,-1207.875,59.0703125},
	{2608.1591796875,-1216.6357421875,56.762214660645},
	{2614.6767578125,-1239.6708984375,49.786777496338},
	{2698.8125,-1202.8974609375,67.981636047363},
	{2692.04296875,-1224.041015625,61.467155456543},
	{2672.2861328125,-1237.6181640625,55.769592285156},
	{2661.802734375,-1216.6318359375,62.057613372803},
	{2588.4580078125,-975.6484375,81.391235351562},
	{2582.697265625,-953.837890625,81.387008666992},
	{2529.14453125,-963.65234375,82.363723754883},
	{2499.455078125,-948.7939453125,82.267784118652},
	{2472.3134765625,-964.630859375,80.138618469238},
	{2454.17578125,-964.7099609375,80.073120117188},
	{2579.7705078125,-1033.521484375,69.580101013184},
	{2561.263671875,-1034.2744140625,69.575614929199},
	{2527.078125,-1060.8125,69.567825317383},
	{2513.33984375,-1027.87890625,70.0859375},
	{2505.1318359375,-1020.552734375,70.0859375},
	{2478.220703125,-1062.4609375,66.8359375},
	{2468.0244140625,-1011.853515625,59.7734375},
	{2433.9296875,-1012.8134765625,54.34375},
	{2389.9501953125,-1037.375,53.564434051514},
	{2370.0009765625,-1035.58984375,54.410556793213},
	{2335.3798828125,-1045.0556640625,52.358196258545},
	{2298.2197265625,-1054.1796875,49.933994293213},
	{2256.8583984375,-1069.4482421875,49.4765625},
	{2258.994140625,-1029.8837890625,52.679298400879},
	{2267.07421875,-1031.421875,59.294151306152},
	{2219.318359375,-1046.7607421875,57.662059783936},
	{2249.68359375,-1059.6806640625,55.96875},
	{2206.556640625,-988.3662109375,63.9296875},
	{2188.3203125,-998.0244140625,62.840515136719},
	{2185.7216796875,-997.8642578125,66.46875},
	{2176.5703125,-982.5595703125,64.46875},
	{2142.8916015625,-978.728515625,61.379306793213},
	{2121.9423828125,-971.0498046875,58.207431793213},
	{2109.0263671875,-1000.4287109375,60.5078125},
	{2066.3505859375,-991.0703125,48.799369812012},
	{2056.2587890625,-967.2822265625,46.027828216553},
	{2040.896484375,-1014.2470703125,39.7421875},
	{2571.443359375,-1091.830078125,67.225723266602},
	{2519.7060546875,-1114.5751953125,56.207511901855},
	{2453.134765625,-1107.65234375,43.388641357422},
	{2438.5380859375,-1104.8828125,42.751155853271},
	{2374.568359375,-1138.94921875,29.058792114258},
	{2396.5009765625,-1133.5830078125,30.71875},
	{2510.5693359375,-1129.529296875,41.127861022949},
	{2285.7451171875,-1102.5478515625,37.9765625},
	{2249.259765625,-1103.6142578125,41.6015625},
	{2187.4267578125,-1082.453125,43.842967987061},
	{2219.8798828125,-1082.4580078125,41.630508422852},
	{2202.345703125,-1056.236328125,47.107879638672},
	{2157.119140625,-1070.9384765625,39.950454711914},
	{2138.20703125,-1072.9228515625,27.270616531372},
	{2116.7734375,-1049.60546875,26.367670059204},
	{2054.30859375,-1067.548828125,25.783622741699},
	{2039.37109375,-1061.7158203125,25.650810241699},
	{1892.412109375,-1068.2373046875,23.9375},
	{1916.2900390625,-1072.822265625,24.253681182861},
	{1938.0576171875,-1068.0625,24.418003082275},
	{1958.0791015625,-1076.9267578125,24.796701431274},
	{1958.7119140625,-1116.0625,27.830497741699},
	{1945.291015625,-1116.25,27.447629928589},
	{1925.37890625,-1114.482421875,27.088310241699},
	{1888.9873046875,-1112.984375,26.275810241699},
	{1998.02734375,-1114.7236328125,26.773735046387},
	{2004.1845703125,-1115.0048828125,27.125},
	{2029.408203125,-1121.5654296875,26.416379928589},
	{2045.119140625,-1111.8828125,26.361747741699},
	{2094.2353515625,-1125.69921875,27.689872741699},
	{2090.580078125,-1163.9970703125,26.588254928589},
	{2090.44921875,-1233.9052734375,25.477380752563},
	{2107.2646484375,-1250.5537109375,25.48588180542},
	{2133.24609375,-1232.818359375,24.421875},
	{2151.2109375,-1285.6005859375,24.19647026062},
	{2094.416015625,-1275.6552734375,25.497339248657},
	{2096.490234375,-1277.3701171875,25.49262046814},
	{2100.8515625,-1321.87109375,25.953125},
	{2122.5712890625,-1321.7568359375,26.626171112061},
	{2113.5283203125,-1358.5498046875,23.984375},
	{2130.3740234375,-1362.748046875,25.546340942383},
	{2146.8779296875,-1366.91015625,25.64178276062},
	{2187.9775390625,-1364.3330078125,25.82928276062},
	{2206.30078125,-1364.052734375,25.672866821289},
	{2253.5390625,-1364.14453125,24.53125},
	{2232.71484375,-1280.1455078125,25.3671875},
	{2191.7138671875,-1275.6845703125,25.15625},
	{2191.189453125,-1238.0439453125,23.9765625},
	{2229.7109375,-1241.53125,25.65625},
	{2250.3671875,-1238.8798828125,25.8984375},
	{2232.4921875,-1177.318359375,29.804386138916},
	{2352.0947265625,-1180.208984375,27.975339889526},
	{2337.216796875,-1234.009765625,27.9765625},
	{2349.7744140625,-1281.587890625,27.9765625},
	{2383.3935546875,-1367.8515625,24.491352081299},
	{2402.79296875,-1329.9208984375,25.403764724731},
	{2388.138671875,-1279.7783203125,25.129104614258},
	{2420.884765625,-1220.4638671875,25.485147476196},
	{2435.2666015625,-1289.1884765625,25.347854614258},
	{2435.7802734375,-1321.3994140625,24.779174804688},
	{2467.21484375,-1412.640625,23.75},
	{2466.9775390625,-1425.2802734375,23.75},
	{2464.0390625,-1317.8935546875,27.390625},
	{2480.41015625,-1329.8525390625,28.292972564697},
	{2469.0625,-1277.4130859375,30.366352081299},
	{2502.1044921875,-1324.89453125,33.429763793945},
	{2496.0166015625,-1390.96875,28.839567184448},
	{2475.9150390625,-1400.0908203125,28.834657669067},
	{2495.916015625,-1431.7099609375,29.016227722168},
	{2492.173828125,-1240.556640625,37.361846923828},
	{2515.2861328125,-1242.2958984375,39.022338867188},
	{2529.9462890625,-1244.068359375,43.65625},
	{2550.12890625,-1234.271484375,49.001361846924},
	{2557.572265625,-1210.79296875,54.53125},
	{2528.0341796875,-1209.48828125,50.28125},
	{2537.396484375,-1362.9814453125,30.457332611084},
	{2015.623046875,-1289.8779296875,23.984375},
	{2002.3154296875,-1309.7451171875,25.222122192383},
	{2158.673828125,-1489.306640625,26.654174804688},
	{2148.6591796875,-1485.41015625,26.623416900635},
	{2149.6455078125,-1432.9677734375,26.018363952637},
	{2150.353515625,-1419.4072265625,25.921875},
	{2151.1083984375,-1400.7060546875,26.128503799438},
	{2188.5517578125,-1417.90234375,26.15625},
	{2191.66015625,-1455.3330078125,25.740631103516},
	{2190.3427734375,-1488.7939453125,25.77459526062},
	{2232.7568359375,-1469.3779296875,24.581628799438},
	{2248.591796875,-1469.337890625,24.149597167969},
	{-1371.396484375,2053.23046875,52.515625},
	{-1426.8818359375,2171.048828125,50.625},
	{2245.6708984375,-1396.880859375,24.0},
	{-1503.2607421875,1978.3623046875,48.421875},
	{2352.00390625,-1412.2373046875,23.992404937744},
	{-1500.2109375,1960.158203125,49.0234375},
	{2414.0576171875,-1424.5029296875,23.982444763184},
	{2508.5029296875,-1493.6025390625,23.998546600342},
	{1797.8603515625,-1578.8251953125,14.090040206909},
	{-2471.451171875,1537.7080078125,33.234375},
	{-2477.275390625,1550.2998046875,33.234375},
	{1787.0849609375,-1638.8837890625,14.469971656799},
	{1772.720703125,-1658.798828125,14.42511177063},
	{1739.966796875,-1562.626953125,14.162391662598},
	{1771.6943359375,-1548.0390625,9.9088573455811},
	{1910.2412109375,-1911.9130859375,15.256797790527},
	{1937.435546875,-1907.333984375,15.256797790527},
	{-1049.486328125,1550.572265625,33.437610626221},
	{-782.046875,1557.677734375,27.1171875},
	{-797.072265625,1557.283203125,27.124444961548},
	{-734.2724609375,1547.3525390625,38.979309082031},
	{-732.8095703125,1539.7578125,40.473579406738},
	{-731.419921875,1535.5341796875,40.236835479736},
	{-771.595703125,1447.5087890625,13.9453125},
	{-811.673828125,1420.900390625,13.9453125},
	{-810.2216796875,1469.8037109375,19.22875213623},
	{-828.146484375,1463.216796875,14.657393455505},
	{-792.99609375,1627.375,27.15625},
	{-636.259765625,1445.943359375,13.996495246887},
	{-692.5068359375,960.24609375,12.220783233643},
	{-671.8203125,960.7392578125,12.1328125},
	{-671.74609375,970.9345703125,12.1328125},
	{-690.490234375,970.71484375,12.201937675476},
	{-690.787109375,939.44921875,13.6328125},
	{-685.3828125,941.7919921875,13.6328125},
	{-683.9716796875,932.15234375,13.6328125},
	{2139.546875,-1733.9208984375,17.2890625},
	{2155.958984375,-1733.3662109375,17.281345367432},
	{-825.3759765625,1823.8203125,7.0000076293945},
	{-608.0703125,1831.8974609375,7.0},
	{2147.3056640625,-1819.6796875,16.140625},
	{2149.7861328125,-1803.84375,16.153861999512},
	{2247.59375,-1795.16015625,13.546875},
	{2275.5673828125,-1788.400390625,13.546875},
	{-782.9736328125,2147.8447265625,60.3828125},
	{2345.359375,-1786.2158203125,13.546875},
	{-651.427734375,2153.4443359375,60.3828125},
	{2379.650390625,-1784.9951171875,13.546875},
	{-793.5537109375,2264.93359375,59.100883483887},
	{2466.4453125,-1753.0693359375,13.546875},
	{-663.0322265625,2306.0810546875,136.09428405762},
	{-662.6083984375,2313.619140625,138.81950378418},
	{2500.8662109375,-1759.8662109375,13.546875},
	{-774.6181640625,2424.9140625,157.10360717773},
	{2538.751953125,-1719.2490234375,13.526076316833},
	{-808.076171875,2430.5830078125,156.99356079102},
	{2522.9404296875,-1682.7685546875,15.496999740601},
	{-911.59375,2672.43359375,42.370262145996},
	{-902.7744140625,2695.4619140625,42.370262145996},
	{2524.705078125,-1656.3564453125,15.493547439575},
	{-853.1787109375,2760.3349609375,46.0},
	{2514.1962890625,-1650.8193359375,14.355666160583},
	{-766.888671875,2765.2216796875,48.255599975586},
	{-782.57421875,2748.8935546875,45.659553527832},
	{-672.880859375,2706.0185546875,70.663284301758},
	{2487.62890625,-1697.6142578125,14.765625},
	{2491.6435546875,-1693.2373046875,14.765625},
	{2531.4970703125,-1665.455078125,15.16725730896},
	{2468.0302734375,-1646.470703125,13.780097007751},
	{2451.390625,-1641.7041015625,13.735734939575},
	{2412.51953125,-1647.005859375,14.011916160583},
	{2384.474609375,-1675.0712890625,14.712868690491},
	{2361.5029296875,-1644.130859375,13.523147583008},
	{-429.1455078125,2240.5068359375,42.983383178711},
	{2327.875,-1682.1748046875,14.917343139648},
	{2386.7802734375,-1711.8505859375,14.2421875},
	{2307.36328125,-1714.5009765625,14.64959526062},
	{-325.0166015625,1852.556640625,42.5078125},
	{2228.5361328125,-1721.3740234375,13.561138153076},
	{2246.7861328125,-1638.5419921875,15.90740776062},
	{2282.8603515625,-1642.0654296875,15.627917289734},
	{2305.06640625,-1678.7060546875,14.00115776062},
	{2383.8291015625,-1547.9697265625,24.156600952148},
	{-310.302734375,1303.041015625,53.664344787598},
	{2420.89453125,-1508.4912109375,24.0},
	{2459.216796875,-1491.982421875,24.0},
	{2451.615234375,-1492.8115234375,24.0},
	{-323.1240234375,2676.1044921875,63.6796875},
	{-227.2724609375,2711.2919921875,62.9765625},
	{-155.6328125,2759.0146484375,62.635894775391},
	{-160.4794921875,2727.9775390625,62.177940368652},
	{-169.2509765625,2707.455078125,62.540195465088},
	{-254.1103515625,2604.5302734375,62.858154296875},
	{-258.181640625,2781.6416015625,62.6875},
	{-36.5,2349.927734375,24.302555084229},
	{81.0498046875,2451.48828125,16.484375},
	{263.4287109375,2895.767578125,10.531394958496},
	{382.361328125,2607.267578125,16.484375},
	{2179.9990234375,-1661.2490234375,14.909368515015},
	{2127.7861328125,-1687.8515625,15.0859375},
	{153.814453125,-1958.794921875,3.7734375},
	{2066.8984375,-1657.2578125,14.096161842346},
	{2067.7373046875,-1642.2138671875,13.805846214294},
	{2068.134765625,-1628.8974609375,13.87615776062},
	{2068.2138671875,-1588.6298828125,13.490336418152},
	{2079.0244140625,-1554.759765625,13.402491569519},
	{2064.576171875,-1558.9169921875,13.439072608948},
	{415.11328125,2531.3271484375,19.168476104736},
	{428.2197265625,2545.3662109375,16.249221801758},
	{424.1630859375,2536.3037109375,16.1484375},
	{2017.533203125,-1630.0791015625,13.712096214294},
	{2016.3212890625,-1643.41796875,13.78240776062},
	{2018.220703125,-1704.8896484375,14.234375},
	{2015.3154296875,-1734.177734375,14.234375},
	{1977.828125,-1714.75390625,17.037658691406},
	{1973.5517578125,-1705.60546875,15.96875},
	{1975.056640625,-1678.78125,17.071880340576},
	{1973.3056640625,-1654.69140625,15.96875},
	{1974.6650390625,-1635.400390625,15.96875},
	{1974.9912109375,-1633.9052734375,18.568988800049},
	{1965.04296875,-1592.8447265625,13.572462081909},
	{394.4560546875,2680.8642578125,59.156536102295},
	{1973.955078125,-1561.2412109375,13.637348175049},
	{91.025390625,2707.1669921875,53.903339385986},
	{537.755859375,2364.4638671875,30.674282073975},
	{546.197265625,2277.400390625,34.860118865967},
	{-126.1220703125,2255.048828125,28.151527404785},
	{202.328125,1873.291015625,13.140625},
	{-85.0,1516.830078125,15.561989784241},
	{20.6728515625,1344.7451171875,9.171875},
	{7.41015625,1382.4853515625,9.1781387329102},
	{-21.0107421875,1389.525390625,9.171875},
	{1863.1865234375,-1597.7900390625,14.306245803833},
	{1866.560546875,-1598.0615234375,14.26363658905},
	{1752.416015625,-1473.1533203125,13.509583473206},
	{1739.8955078125,-1460.642578125,13.504856109619},
	{4.1708984375,1346.287109375,9.171875},
	{1594.4052734375,-1560.1611328125,14.165175437927},
	{1576.7822265625,-1470.3623046875,14.23811340332},
	{541.8642578125,1556.9052734375,1.0},
	{613.3564453125,1548.4521484375,4.7992935180664},
	{708.8984375,1600.005859375,4.0251665115356},
	{666.9912109375,1701.642578125,7.1948890686035},
	{693.7490234375,1966.4921875,5.5390625},
	{700.498046875,1992.796875,5.53125},
	{710.4248046875,1983.1796875,3.468513250351},
	{709.40625,1208.09765625,13.848057746887},
	{710.3564453125,1192.966796875,13.396438598633},
	{501.6162109375,1116.044921875,15.035557746887},
	{397.8681640625,1159.357421875,8.3480567932129},
	{110.7041015625,1105.08203125,13.609375},
	{23.259765625,969.015625,19.800422668457},
	{-2.3349609375,953.7919921875,19.638710021973},
	{-54.3759765625,894.7314453125,22.387119293213},
	{-124.6806640625,918.572265625,19.909372329712},
	{17.3505859375,910.84375,23.849599838257},
	{32.33984375,921.3662109375,23.600179672241},
	{69.9091796875,973.13671875,15.86469078064},
	{-93.052734375,971.3857421875,19.942081451416},
	{-220.8310546875,988.787109375,19.638097763062},
	{-180.0888671875,1087.79296875,19.7421875},
	{-206.7109375,1087.46875,19.7421875},
	{-186.92578125,1210.0517578125,19.687629699707},
	{-143.953125,1224.33984375,19.899219512939},
	{-66.1025390625,1210.26171875,22.436527252197},
	{-28.69921875,1215.2255859375,22.464834213257},
	{14.1279296875,1181.6396484375,19.430858612061},
	{-19.083984375,1176.1220703125,19.563381195068},
	{-93.0234375,1159.0849609375,19.7421875},
	{-107.236328125,1138.9287109375,19.7421875},
	{-101.1640625,1109.240234375,19.7421875},
	{8.625,1069.8984375,20.939865112305},
	{-30.1484375,1045.8837890625,20.939867019653},
	{-251.4169921875,1050.0458984375,20.939863204956},
	{-304.2783203125,1120.6806640625,19.7421875},
	{-328.810546875,1119.837890625,20.939863204956},
	{-362.8330078125,1110.7998046875,20.939865112305},
	{-360.1904296875,1139.310546875,20.939867019653},
	{-369.44140625,1168.9306640625,20.27187538147},
	{-362.171875,1191.5791015625,19.7421875},
	{-220.6748046875,1173.96875,19.7421875},
	{-207.5810546875,1118.9912109375,20.4296875},
	{-319.3681640625,818.01171875,14.421697616577},
	{-453.0341796875,616.1943359375,16.815383911133},
	{322.958984375,854.0498046875,20.40625},
	{585.5908203125,875.73046875,-42.497318267822},
	{713.50390625,908.9951171875,-18.846324920654},
	{771.978515625,1883.607421875,4.9840874671936},
	{754.4326171875,1972.8193359375,5.69961977005},
	{792.923828125,1991.4208984375,5.79336977005},
	{765.0244140625,2006.4072265625,6.06680727005},
	{2680.8095703125,868.7412109375,10.939546585083},
	{2678.880859375,826.673828125,10.954463005066},
	{2660.4013671875,748.0615234375,14.739588737488},
	{2654.783203125,717.2900390625,14.739588737488},
	{2576.2353515625,714.0361328125,14.739588737488},
	{2534.853515625,747.3837890625,10.8203125},
	{2463.8046875,735.083984375,11.4609375},
	{2465.0029296875,658.095703125,11.359375},
	{2398.5517578125,672.3798828125,11.359375},
	{2370.3544921875,676.943359375,11.460479736328},
	{2328.849609375,663.1591796875,11.453125},
	{2308.1220703125,676.271484375,11.3836145401},
	{2350.1416015625,734.55078125,11.468292236328},
	{2369.521484375,749.2099609375,11.4609375},
	{2386.4169921875,741.9736328125,11.359375},
	{2260.9580078125,733.603515625,11.4609375},
	{2226.6640625,748.1552734375,11.4609375},
	{2200.6630859375,751.095703125,11.183270454407},
	{2178.9306640625,758.9052734375,11.4609375},
	{2181.12109375,695.744140625,11.27140045166},
	{2227.818359375,654.0703125,11.4609375},
	{2320.6142578125,654.0341796875,11.453125},
	{2247.3857421875,584.5341796875,7.78125},
	{2179.01953125,654.4892578125,11.4609375},
	{2131.1708984375,650.080078125,11.4609375},
	{2106.2626953125,698.9853515625,11.366704940796},
	{2086.5830078125,715.8388671875,11.789765357971},
	{2047.3916015625,772.5830078125,11.453125},
	{2128.9189453125,789.8076171875,11.34375},
	{2010.998046875,707.5966796875,11.4609375},
	{2013.3037109375,652.1025390625,11.4609375},
	{2043.3115234375,638.1796875,11.4609375},
	{1955.9228515625,737.7890625,14.281055450439},
	{1898.140625,736.6279296875,14.2734375},
	{1899.2177734375,679.806640625,14.2734375},
	{1924.142578125,665.4296875,10.8203125},
	{1936.244140625,663.978515625,10.8203125},
	{1951.5908203125,671.6162109375,10.8203125},
	{1846.5576171875,691.26171875,11.453125},
	{1844.888671875,654.7294921875,11.4609375},
	{1453.822265625,749.66796875,11.0234375},
	{1532.0380859375,752.9267578125,11.0234375},
	{1544.1845703125,676.5625,11.328125},
	{1093.51953125,996.80078125,11.0},
	{1020.4912109375,1056.2265625,11.0},
	{1163.0771484375,1342.119140625,10.812517166138},
	{1165.5888671875,1348.1884765625,10.921875},
	{1174.2158203125,1349.439453125,10.921875},
	{1123.162109375,1463.23046875,5.8203125},
	{1090.80078125,1456.6982421875,5.8203125},
	{1070.638671875,1594.9052734375,5.8203125},
	{1105.337890625,1601.8115234375,5.8203125},
	{1110.5263671875,1598.626953125,12.546875},
	{1087.4208984375,1597.8759765625,12.546875},
	{963.994140625,1792.7421875,8.8515625},
	{1034.919921875,1840.5966796875,11.468292236328},
	{971.103515625,1887.0078125,11.468292236328},
	{937.068359375,1920.517578125,11.468292236328},
	{971.0712890625,1977.146484375,11.468292236328},
	{1027.81640625,1926.576171875,11.468292236328},
	{1021.2802734375,1972.55078125,11.163819313049},
	{1025.3779296875,2026.5234375,11.347480773926},
	{957.7919921875,2256.5654296875,11.3671875},
	{986.890625,2272.4775390625,11.4609375},
	{987.044921875,2312.845703125,11.4609375},
	{970.8828125,2350.4130859375,11.46875},
	{1225.7939453125,2616.9736328125,10.8203125},
	{1265.474609375,2608.0849609375,10.8203125},
	{1276.072265625,2522.248046875,10.8203125},
	{1328.9736328125,2521.4775390625,10.826429367065},
	{1325.2548828125,2568.6103515625,10.8203125},
	{1344.6630859375,2608.3330078125,10.8203125},
	{1412.0693359375,2577.4931640625,10.826509475708},
	{1451.1142578125,2567.16796875,10.8203125},
	{1503.6923828125,2570.044921875,10.8203125},
	{1515.609375,2607.4580078125,10.8203125},
	{1551.619140625,2567.365234375,10.8203125},
	{1596.6640625,2568.2353515625,10.8203125},
	{1623.4375,2570.0888671875,10.8203125},
	{1556.6337890625,2661.298828125,10.8203125},
	{1573.2255859375,2661.7197265625,10.8203125},
	{1457.4462890625,2771.947265625,10.8203125},
	{1448.9794921875,2774.0263671875,18.8203125},
	{1442.6376953125,2796.767578125,19.5234375},
	{1426.5166015625,2780.7314453125,14.8203125},
	{1426.21875,2799.0908203125,14.8203125},
	{1388.9599609375,2656.1787109375,11.392612457275},
	{1478.05859375,2651.5498046875,11.392612457275},
	{1437.7451171875,2646.77734375,11.392612457275},
	{1431.771484375,2622.7216796875,11.392614364624},
	{1570.548828125,2715.2548828125,10.8203125},
	{1576.6708984375,2751.9453125,11.343775749207},
	{1561.107421875,2794.79296875,10.8203125},
	{1575.3896484375,2840.87890625,10.8203125},
	{1601.5283203125,2805.9091796875,10.8203125},
	{1638.8935546875,2834.953125,10.8203125},
	{1655.4033203125,2805.14453125,10.8203125},
	{1675.59765625,2800.6513671875,10.8203125},
	{1671.92578125,2744.462890625,10.8203125},
	{1634.5390625,2745.3359375,10.8203125},
	{1609.2421875,2718.5244140625,10.8203125},
	{1626.7646484375,2714.0478515625,10.8203125},
	{1676.8466796875,2695.7880859375,10.8203125},
	{1703.9306640625,2693.53125,10.8203125},
	{1736.3994140625,2694.12109375,10.8203125},
	{1741.6904296875,2859.5185546875,11.3359375},
	{1761.609375,2866.7099609375,11.3359375},
	{1772.1669921875,2867.37890625,11.3359375},
	{1794.0322265625,2858.716796875,14.257873535156},
	{1772.7841796875,2866.625,14.265625},
	{1734.9638671875,2827.7783203125,11.350912094116},
	{1736.9287109375,2815.4765625,11.34375},
	{1747.41015625,2769.404296875,11.34375},
	{1752.3359375,2760.3232421875,11.350912094116},
	{1776.591796875,2747.908203125,11.34375},
	{1782.15625,2767.41796875,11.350912094116},
	{1792.1376953125,2802.7001953125,11.34375},
	{1795.0126953125,2813.4033203125,11.34375},
	{1802.619140625,2835.9482421875,14.273517608643},
	{1795.212890625,2815.33984375,14.273517608643},
	{1756.2978515625,2746.171875,14.273517608643},
	{1751.9404296875,2757.822265625,14.273517608643},
	{1747.5029296875,2770.5400390625,14.273517608643},
	{1836.4345703125,2838.580078125,10.8359375},
	{1835.65625,2827.3056640625,10.8359375},
	{1852.9501953125,2857.572265625,11.902812957764},
	{1884.30859375,2877.162109375,10.8359375},
	{1887.5224609375,2802.2216796875,11.34375},
	{1878.9052734375,2793.6416015625,11.34375},
	{1863.0244140625,2777.3564453125,14.265686035156},
	{1879.77734375,2793.5341796875,14.2734375},
	{1855.607421875,2766.4091796875,14.265686035156},
	{1837.75,2751.4873046875,14.2734375},
	{1825.97265625,2648.955078125,10.8203125},
	{1844.521484375,2648.0107421875,10.8203125},
	{1863.384765625,2648.13671875,10.8203125},
	{1880.474609375,2646.9970703125,10.8203125},
	{1869.1171875,2584.466796875,10.8203125},
	{1887.80078125,2585.03515625,10.8203125},
	{1925.587890625,2606.3720703125,10.8203125},
	{1944.2724609375,2605.9501953125,10.8203125},
	{1949.5625,2661.6376953125,10.8203125},
	{1947.16796875,2707.3603515625,10.8203125},
	{2010.0546875,2707.474609375,11.20196056366},
	{2011.0693359375,2728.6357421875,10.827390670776},
	{2017.3642578125,2754.951171875,10.8203125},
	{1961.4599609375,2756.41796875,10.8203125},
	{1919.3740234375,2768.7958984375,10.826509475708},
	{2009.8427734375,2680.1689453125,10.8203125},
	{2143.6982421875,2835.0341796875,10.8203125},
	{2618.861328125,2724.796875,36.538642883301},
	{2823.466796875,2268.119140625,14.661463737488},
	{2817.1748046875,2275.263671875,14.661463737488},
	{2793.5400390625,2222.580078125,10.8203125},
	{2794.3525390625,2228.98046875,14.661463737488},
	{2824.0146484375,2206.849609375,10.812986373901},
	{2819.1474609375,2140.6875,14.661464691162},
	{2826.0498046875,2125.791015625,10.8203125},
	{2809.8876953125,2067.072265625,10.735213279724},
	{2809.7685546875,2049.3828125,10.790351867676},
	{2834.6787109375,2049.7626953125,10.8203125},
	{2836.0009765625,2083.8603515625,10.8203125},
	{-2229.0498046875,252.37890625,35.3203125},
	{-2547.072265625,392.6298828125,22.015625},
	{-2513.5068359375,849.2216796875,52.6953125},
	{-2513.9052734375,885.67578125,62.764999389648},
	{-2502.8212890625,921.3798828125,65.241363525391},
	{-2449.8701171875,921.41796875,58.144382476807},
	{-2374.1484375,931.5830078125,45.414939880371},
	{-2113.2744140625,978.0263671875,71.515625},
	{-2041.939453125,979.51171875,54.677085876465},
	{-1625.783203125,944.388671875,10.6484375},
	{-1582.0908203125,955.869140625,7.1875},
	{-1594.775390625,975.8095703125,7.1875},
	{-1614.9228515625,1002.02734375,7.1875},
	{-1616.353515625,1097.9267578125,7.1875},
	{-1617.5341796875,1155.9814453125,7.1875},
	{-1492.1396484375,920.0009765625,7.1875},
	{-1606.1083984375,773.2783203125,7.1875},
	{-1422.5283203125,-285.8115234375,14.1484375},
	{-1388.7177734375,-328.6025390625,14.280866622925},
	{-2051.763671875,-480.5322265625,38.734375},
	{-1971.513671875,-1019.2958984375,32.171875},
	{-2002.3720703125,-1020.7861328125,32.171875},
	{-2209.978515625,-2288.8974609375,30.625},
	{-2223.248046875,-2293.5615234375,31.671875},
	{-2188.8271484375,-2344.521484375,30.625},
	{-2157.787109375,-2337.0458984375,30.625},
	{-2103.9794921875,-2341.955078125,30.625},
	{-2129.5556640625,-2375.3505859375,30.625},
	{-2144.109375,-2425.78515625,30.625},
	{-2105.984375,-2480.7490234375,30.625},
	{-2057.5341796875,-2464.5439453125,31.1796875},
	{-2079.3056640625,-2448.56640625,30.625},
	{-2093.65625,-2464.8388671875,30.625},
	{-2132.513671875,-2511.123046875,31.816272735596},
	{-2161.455078125,-2535.5439453125,31.816270828247},
	{-2199.8115234375,-2512.4248046875,31.816270828247},
	{-2189.3662109375,-2533.4150390625,31.1171875},
	{-2227.697265625,-2489.3681640625,31.816272735596},
	{-2214.03125,-2451.876953125,31.816270828247},
	{-2239.0341796875,-2423.8388671875,32.70726776123},
	{-2161.333984375,-2384.7919921875,30.895784378052},
	{-2087.3359375,-2510.623046875,31.066806793213},
	{-2058.1669921875,-2503.5595703125,31.066806793213},
	{-2075.21484375,-2526.1865234375,31.066806793213},
	{-2068.947265625,-2561.501953125,31.066806793213},
	{-2031.2890625,-2538.904296875,31.066806793213},
	{-1855.173828125,-1560.04296875,22.453125},
	{-2242.337890625,191.2001953125,35.3203125},
	{1722.68359375,-2334.0068359375,13.546875},
	{-2197.4892578125,1190.759765625,55.69548034668},
	{1632.326171875,-2335.2197265625,13.539954185486},
	{-2351.1376953125,1299.45703125,19.584844589233},
	{1682.185546875,-2240.4375,-2.6991682052612},
	{1640.166015625,-2333.09765625,-2.6796875},
	{-2312.478515625,848.5205078125,71.382347106934},
	{-2231.46875,-2558.251953125,31.921875},
	{-2663.8955078125,552.2001953125,14.609375},
	{-2890.9560546875,738.5390625,29.171875},
	{-2477.83984375,1338.0986328125,8.5038833618164},
	{-890.25,20.0693359375,31.13649559021},
	{-877.8994140625,25.2763671875,30.586343765259},
	{-100.333984375,-104.8505859375,3.1180820465088},
	{148.2802734375,-159.6787109375,1.578125},
	{178.220703125,-120.2314453125,1.5490583181381},
	{160.6337890625,-102.615234375,4.8964710235596},
	{207.0751953125,-102.7646484375,4.8964710235596},
	{209.0244140625,-112.3701171875,1.5508496761322},
	{252.8828125,-121.212890625,3.5353934764862},
	{267.8115234375,-54.5546875,2.7772099971771},
	{295.1337890625,-54.587890625,2.7772107124329},
	{196.82421875,-119.9599609375,1.5502977371216},
	{175.7138671875,-95.23828125,1.5502822399139},
	{158.568359375,-106.9755859375,4.8964710235596},
	{312.7353515625,-92.474609375,3.5353934764862},
	{312.7373046875,-121.0869140625,3.5353941917419},
	{259.4619140625,-302.591796875,1.9183698892593},
	{254.9072265625,-191.6904296875,1.578125},
	{301.017578125,-188.7138671875,1.578125},
	{262.0185546875,-270.0517578125,1.6404900550842},
	{263.06640625,21.927734375,3.4331963062286},
	{252.3095703125,-91.1962890625,3.5353941917419},
	{202.7607421875,-202.33984375,1.578125},
	{214.5166015625,-183.0888671875,1.578125},
	{1224.6318359375,249.9892578125,19.546894073486},
	{1256.712890625,274.861328125,19.5546875},
	{1294.9140625,235.7802734375,19.5546875},
	{1244.341796875,205.4287109375,19.645431518555},
	{1317.69140625,224.4599609375,19.56298828125},
	{1386.556640625,293.2529296875,19.54688835144},
	{1273.4189453125,238.228515625,19.610862731934},
	{1356.849609375,308.119140625,19.747299194336},
	{1310.93359375,330.0146484375,19.9140625},
	{1323.8916015625,375.58203125,19.562463760376},
	{1276.9384765625,370.6611328125,19.5546875},
	{1297.0400390625,353.3994140625,19.5546875},
	{1292.4677734375,311.6064453125,19.5546875},
	{1264.4326171875,285.201171875,19.5546875},
	{1272.0859375,309.3125,19.5546875},
	{1235.0078125,360.2578125,19.5546875},
	{1253.2470703125,352.0009765625,19.5546875},
	{1295.0400390625,175.3095703125,20.910556793213},
	{1312.7119140625,170.0556640625,20.4609375},
	{1340.1689453125,216.1025390625,19.5546875},
	{1363.908203125,192.3173828125,24.227144241333},
	{2203.8583984375,62.23046875,28.441644668579},
	{2161.8505859375,-104.626953125,2.7078378200531},
	{2160.43359375,-101.869140625,2.75},
	{2186.98828125,-89.583984375,28.153547286987},
	{2198.1689453125,-57.9453125,28.153549194336},
	{2202.744140625,-38.5810546875,28.153547286987},
	{2250.765625,-2.5986328125,28.153551101685},
	{2247.2744140625,-121.373046875,28.153547286987},
	{2267.1982421875,-139.845703125,27.4765625},
	{2293.5185546875,-134.3857421875,28.153959274292},
	{2321.2763671875,-124.15625,28.153551101685},
	{2256.138671875,-44.03125,26.683433532715},
	{2266.3125,-76.5771484375,24.5859375},
	{2368.3134765625,-64.7060546875,28.153547286987},
	{2387.15234375,-53.431640625,28.153551101685},
	{2436.2548828125,-54.2744140625,28.153549194336},
	{2439.45703125,-71.5087890625,28.153959274292},
	{2203.8623046875,106.1181640625,28.44164276123},
	{2249.404296875,111.759765625,28.44164276123},
	{2251.763671875,80.04296875,26.703674316406},
	{2445.021484375,-13.126953125,27.683458328247},
	{2269.6240234375,111.7685546875,28.441644668579},
	{2432.73046875,-0.875,26.484375},
	{2273.1865234375,82.1259765625,26.484375},
	{2285.7744140625,161.7666015625,28.44164276123},
	{2410.328125,-7.28515625,27.683460235596},
	{2258.0439453125,168.3134765625,28.153551101685},
	{2416.19921875,17.8681640625,27.683458328247},
	{2236.404296875,168.302734375,28.153549194336},
	{2374.3173828125,22.654296875,28.44164276123},
	{2323.8896484375,116.1103515625,28.44164276123},
	{2373.865234375,49.236328125,28.441644668579},
	{2363.9697265625,116.05859375,28.441644668579},
	{2323.8759765625,136.4765625,28.44164276123},
	{2366.390625,40.341796875,28.44164276123},
	{2363.9970703125,141.7978515625,28.44164276123},
	{2323.8486328125,162.4755859375,28.441644668579},
	{2363.986328125,165.8994140625,28.441644668579},
	{2323.875,191.03515625,28.44164276123},
	{2363.9931640625,187.1484375,28.44164276123},
	{2307.013671875,-4.8701171875,26.7421875},
	{2310.9267578125,-9.912109375,26.7421875},
	{2333.611328125,51.7109375,26.627893447876},
	{2324.1884765625,-3.5205078125,26.557140350342},
	{2332.97265625,-4.00390625,26.560916900635},
	{2327.888671875,8.4453125,26.531627655029},
	{2484.3359375,-28.353515625,28.44164276123},
	{2488.328125,11.7509765625,28.44164276123},
	{2513.419921875,-28.375,28.441644668579},
	{2558.2197265625,-11.2705078125,27.675647735596},
	{2549.19921875,25.4013671875,27.675647735596},
	{2398.416015625,110.73046875,28.44164276123},
	{2551.20703125,57.1240234375,27.675645828247},
	{2444.046875,97.8427734375,28.441644668579},
	{2556.9736328125,87.7666015625,27.675645828247},
	{2494.595703125,88.2958984375,26.484375},
	{2561.78125,72.1796875,26.4765625},
	{2537.916015625,128.3974609375,27.683460235596},
	{2513.9208984375,94.4111328125,27.683460235596},
	{2504.732421875,134.0849609375,26.4765625},
	{2462.7822265625,134.2802734375,27.675645828247},
	{2481.0791015625,125.8642578125,27.675647735596},
	{2456.7744140625,127.2626953125,27.675647735596},
	{2412.8662109375,70.7548828125,28.44164276123},
	{1547.08984375,32.642578125,24.140625},
	{1105.8349609375,-301.82421875,74.5390625},
	{1106.46875,-316.521484375,74.7421875},
	{614.388671875,-518.3642578125,16.353294372559},
	{624.8662109375,-506.2568359375,16.352542877197},
	{654.810546875,-503.103515625,16.3359375},
	{695.048828125,-500.1318359375,16.3359375},
	{818.771484375,-495.69140625,18.012922286987},
	{742.337890625,-495.80078125,18.012922286987},
	{795.482421875,-497.193359375,18.013332366943},
	{768.375,-503.7763671875,18.012926101685},
	{766.5439453125,-556.5673828125,18.012924194336},
	{745.232421875,-556.7734375,18.012926101685},
	{800.810546875,-574.1591796875,16.3359375},
	{691.248046875,-621.69140625,16.3359375},
	{820.1103515625,-575.345703125,16.536296844482},
	{673.2314453125,-634.4541015625,16.3359375},
	{857.2412109375,-602.9853515625,18.421875},
	{691.84765625,-546.6572265625,16.3359375},
	{849.98828125,-604.048828125,18.421875},
	{745.349609375,-591.0302734375,18.012922286987},
	{716.541015625,-468.16796875,16.343704223633},
	{673.0771484375,-460.72265625,16.536296844482},
	{609.509765625,-611.48828125,17.2265625},
	{609.5478515625,-595.8916015625,17.233013153076},
	{606.294921875,-581.365234375,16.636558532715},
	{2095.3544921875,-1145.32421875,26.592920303345},
	{1852.3740234375,-1144.9921875,23.834211349487},
	{1852.3232421875,-1092.921875,23.828125},
	{1831.0498046875,-1092.1767578125,23.838096618652},
	{1833.751953125,-1125.6044921875,24.672080993652},
	{1796.8720703125,-1149.1142578125,23.749704360962},
	{1700.3095703125,-1171.275390625,23.843555450439},
	{1730.1767578125,-1181.998046875,23.838611602783},
	{1792.90625,-1163.4306640625,23.828125},
	{1830.556640625,-1172.0546875,24.265625},
	{1808.1728515625,-1436.2373046875,13.4296875},
	{1764.3583984375,-1398.005859375,15.7578125},
	{1789.0791015625,-1383.9853515625,15.7578125},
	{1765.7978515625,-1341.994140625,15.758672714233},
	{1684.4501953125,-1345.8330078125,17.433988571167},
	{1734.76953125,-1265.439453125,13.542039871216},
	{1691.03515625,-1200.0849609375,19.8984375},
	{1650.560546875,-1199.1298828125,19.781862258911},
	{1569.3662109375,-1198.900390625,19.7890625},
	{1528.875,-1151.2177734375,24.078125},
	{1566.1611328125,-1171.3837890625,24.095048904419},
	{1631.830078125,-1172.927734375,24.084280014038},
	{1673.3291015625,-1171.041015625,23.972120285034},
	{1658.5478515625,-1342.62890625,17.438894271851},
	{1570.64453125,-1337.533203125,16.484375},
	{1500.3759765625,-1337.107421875,14.021427154541},
	{1516.646484375,-1399.5546875,14.011289596558},
	{1667.8896484375,-1533.5478515625,13.546875},
	{1648.3720703125,-1469.2060546875,13.546875},
	{1689.66015625,-1518.0146484375,13.546875},
	{1670.46875,-1581.7578125,13.546875},
	{1555.7529296875,-1634.4580078125,6.21875},
	{1568.6025390625,-1689.9833984375,6.21875},
	{1419.185546875,-1607.17578125,13.546875},
	{1419.1826171875,-1640.2978515625,13.546875},
	{1410.2939453125,-1701.4365234375,13.539485931396},
	{1341.330078125,-1675.177734375,17.71573638916},
	{1341.3544921875,-1648.96875,17.719120025635},
	{1327.890625,-1556.087890625,13.546875},
	{1347.8154296875,-1501.3310546875,13.546875},
	{1333.091796875,-1522.33984375,13.546875},
	{1360.2177734375,-1469.576171875,13.546875},
	{1368.3525390625,-1432.541015625,14.0546875},
	{1387.353515625,-1438.6533203125,13.5546875},
	{1408.470703125,-1385.607421875,13.572636604309},
	{1370.8134765625,-1365.4697265625,13.546875},
	{1370.6337890625,-1320.107421875,13.546875},
	{1424.6103515625,-1086.5908203125,17.550863265991},
	{1440.609375,-1095.6064453125,17.62438583374},
	{1386.91015625,-1168.6650390625,23.8203125},
	{1465.8994140625,-1010.4609375,26.84375},
	{1448.890625,-1010.728515625,26.84375},
	{1330.3232421875,-985.314453125,33.896629333496},
	{1300.2353515625,-992.048828125,35.280891418457},
	{1290.7939453125,-1075.2197265625,29.27294921875},
	{1285.21484375,-1066.130859375,31.678918838501},
	{1284.6728515625,-1089.58203125,28.2578125},
	{1320.392578125,-1076.6240234375,29.1796875},
	{1291.37890625,-1131.5009765625,23.828125},
	{1243.310546875,-1076.3720703125,31.5546875},
	{1296.7802734375,-991.564453125,32.6953125},
	{1234.81640625,-1437.94921875,13.615178108215},
	{1232.875,-1459.0751953125,13.546875},
	{1284.8671875,-1464.080078125,10.046875},
	{1247.3681640625,-1528.0390625,13.561420440674},
	{1148.23828125,-1344.2822265625,13.655700683594},
	{1180.0244140625,-1260.689453125,18.8984375},
	{1187.322265625,-1254.587890625,18.890762329102},
	{1180.595703125,-1255.048828125,15.1796875},
	{1186.6298828125,-1226.7841796875,18.5546875},
	{1180.81640625,-1227.34765625,22.132949829102},
	{1180.0126953125,-1233.4072265625,22.140625},
	{1170.3720703125,-1490.9453125,22.755535125732},
	{1062.6298828125,-1499.9287109375,22.752643585205},
	{1112.4912109375,-1520.8896484375,15.796875},
	{1153.83984375,-1181.85546875,32.818702697754},
	{1161.640625,-1162.3193359375,32.027549743652},
	{1102.423828125,-1092.8701171875,28.46875},
	{1142.8388671875,-1069.4052734375,31.765625},
	{1102.75,-1069.3359375,31.8828125},
	{1069.2041015625,-1080.9345703125,27.532295227051},
	{1246.2529296875,-908.962890625,46.6015625},
	{1252.869140625,-902.53515625,46.593887329102},
	{1248.9677734375,-877.4228515625,42.8828125},
	{1242.1826171875,-872.0380859375,46.632949829102},
	{1287.1630859375,-867.5517578125,46.836074829102},
	{1281.7578125,-874.931640625,46.84375},
	{1290.984375,-896.9892578125,42.8828125},
	{1439.6669921875,-926.4306640625,39.647666931152},
	{1411.228515625,-920.8828125,38.421875},
	{1467.9072265625,-917.0048828125,54.839092254639},
	{1469.384765625,-904.7822265625,54.8359375},
	{1420.697265625,-885.1396484375,50.645557403564},
	{1527.41796875,-892.8388671875,57.657482147217},
	{1539.822265625,-851.0029296875,64.336059570312},
	{1563.318359375,-855.5576171875,61.365352630615},
	{1534.9189453125,-800.1513671875,72.849456787109},
	{1549.11328125,-803.66015625,72.217529296875},
	{1535.44140625,-762.0888671875,79.9453125},
	{1497.2705078125,-666.6865234375,95.601257324219},
	{1442.8671875,-630.9267578125,95.718566894531},
	{1333.8984375,-630.0361328125,109.1349029541},
	{1258.3154296875,-785.7998046875,92.030181884766},
	{1302.1123046875,-786.5693359375,88.3125},
	{1134.892578125,-748.40234375,97.162223815918},
	{1111.27734375,-742.2744140625,100.13292694092},
	{1095.0439453125,-646.50390625,113.6484375},
	{1094.6015625,-661.0712890625,113.6484375},
	{1045.3935546875,-641.359375,120.1171875},
	{980.0400390625,-677.3671875,121.97625732422},
	{992.154296875,-695.625,121.77093505859},
	{897.7158203125,-677.494140625,116.89044189453},
	{945.8369140625,-710.2158203125,122.61987304688},
	{868.3251953125,-715.86328125,105.6796875},
	{848.931640625,-745.384765625,94.969268798828},
	{808.51953125,-759.94140625,76.531364440918},
	{784.984375,-761.169921875,73.560661315918},
	{909.6806640625,-816.8798828125,103.12602996826},
	{977.6484375,-771.376953125,112.20262908936},
	{1017.0146484375,-763.0830078125,112.56301879883},
	{1034.3251953125,-811.2109375,101.8515625},
	{990.0791015625,-828.50390625,95.468574523926},
	{1093.455078125,-805.79296875,107.42092895508},
	{937.982421875,-848.236328125,93.632316589355},
	{828.65625,-858.4248046875,70.330810546875},
	{786.333984375,-827.677734375,70.289581298828},
	{835.875,-893.609375,68.768898010254},
	{725.0361328125,-997.859375,52.734375},
	{730.9892578125,-1013.015625,52.737854003906},
	{672.921875,-1020.2392578125,55.759605407715},
	{699.2705078125,-1058.7177734375,49.421691894531},
	{645.47265625,-1117.919921875,44.207038879395},
	{565.7802734375,-1098.4677734375,69.951286315918},
	{497.560546875,-1094.9091796875,82.359191894531},
	{416.6953125,-1154.544921875,76.687614440918},
	{471.3603515625,-1164.3671875,67.170478820801},
	{534.728515625,-1173.6796875,58.809711456299},
	{580.3369140625,-1149.345703125,53.180084228516},
	{358.3115234375,-1207.4990234375,76.518783569336},
	{316.11328125,-1139.5576171875,81.593444824219},
	{299.66796875,-1154.400390625,81.224769592285},
	{350.3330078125,-1197.0029296875,76.515625},
	{250.9892578125,-1220.583984375,76.10237121582},
	{252.931640625,-1270.10546875,74.399215698242},
	{272.65234375,-1281.828125,74.632507324219},
	{256.2763671875,-1297.99609375,74.632507324219},
	{220.125,-1250.248046875,78.330360412598},
	{167.1376953125,-1297.1552734375,70.351257324219},
	{168.4248046875,-1321.5234375,70.351257324219},
	{255.20703125,-1365.712890625,53.109375},
	{298.3076171875,-1338.287109375,53.441452026367},
	{228.75,-1403.7080078125,51.60758972168},
	{335.8173828125,-1303.744140625,50.759044647217},
	{398.68359375,-1271.0029296875,50.019790649414},
	{432.056640625,-1253.8876953125,51.580940246582},
	{549.4267578125,-1215.0986328125,44.86026763916},
	{552.109375,-1200.5830078125,44.831535339355},
	{598.68359375,-1194.3447265625,41.784606933594},
	{608.8759765625,-1187.1806640625,41.784606933594},
	{152.6962890625,-1449.6953125,32.844982147217},
	{140.6455078125,-1479.787109375,25.2109375},
	{1674.4541015625,1447.390625,10.790289878845},
	{1682.275390625,1755.2529296875,10.827277183533},
	{1653.578125,1732.27734375,10.8203125},
	{1643.8818359375,1912.6865234375,10.8203125},
	{1663.1279296875,1912.267578125,10.8203125},
	{1671.646484375,1967.9560546875,10.8203125},
	{1648.52734375,1977.759765625,10.8203125},
	{1611.9306640625,1978.109375,10.8203125},
	{1530.740234375,1936.2431640625,10.8203125},
	{1511.0576171875,1911.4580078125,10.8203125},
	{1735.013671875,2111.724609375,12.2890625},
	{1686.2880859375,2046.1767578125,11.46875},
	{1673.447265625,2090.677734375,11.4609375},
	{1672.0517578125,2130.0087890625,11.4609375},
	{1645.0537109375,2128.7568359375,11.203125},
	{1639.6298828125,2149.41015625,11.3125},
	{1638.119140625,2103.275390625,11.3125},
	{1644.87109375,2080.9677734375,11.3125},
	{1618.1064453125,2076.033203125,30.529462814331},
	{1596.4287109375,2038.126953125,11.46875},
	{1597.4423828125,2092.88671875,11.3125},
	{1584.388671875,2147.537109375,11.4609375},
	{1536.3486328125,2032.8720703125,14.739588737488},
	{1542.66796875,2003.1279296875,10.8203125},
	{1501.3984375,2027.3271484375,14.739588737488},
	{1481.15234375,1998.68359375,10.8203125},
	{1473.8974609375,2002.4560546875,10.8203125},
	{1456.1259765625,2030.458984375,14.739588737488},
	{1416.98828125,2036.68359375,10.8203125},
	{1417.9794921875,1999.42578125,10.8203125},
	{1422.6806640625,1915.28515625,11.46875},
	{1453.978515625,1944.6875,11.468292236328},
	{1445.365234375,1949.2958984375,11.4609375},
	{1365.646484375,1932.775390625,11.468292236328},
	{1335.9306640625,1919.6494140625,11.4609375},
	{1319.794921875,1975.5244140625,11.46875},
	{1352.830078125,2027.876953125,11.4609375},
	{1370.0166015625,1989.18359375,11.308856964111},
	{1547.447265625,2125.7880859375,11.4609375},
	{1477.5693359375,2194.6318359375,11.0234375},
	{1407.4580078125,2221.41796875,11.0234375},
	{1369.73828125,2195.5634765625,9.7578125},
	{1393.2724609375,2171.2744140625,9.7578125},
	{1409.5810546875,2141.7421875,12.015625},
	{1413.6455078125,2105.537109375,12.015625},
	{1360.4912109375,2213.3759765625,12.015625},
	{1442.3857421875,2361.904296875,10.8203125},
	{1656.9853515625,2251.1826171875,11.07010269165},
	{1838.0458984375,2157.4013671875,10.8203125},
	{1855.751953125,2157.0712890625,10.8203125},
	{1837.61328125,2093.943359375,10.8203125},
	{1892.7275390625,2235.4423828125,11.125},
	{1879.2236328125,2235.25,11.125},
	{1857.625,2351.8291015625,10.979915618896},
	{1856.248046875,2383.25,10.979915618896},
	{2023.5849609375,1900.0634765625,12.267676353455},
	{2018.970703125,1917.529296875,12.341463088989},
	{1968.7294921875,1623.48828125,12.860266685486},
	{2001.49609375,1541.267578125,13.5859375},
	{1999.31640625,1530.21875,14.622252464294},
	{1890.0166015625,1596.4658203125,10.538269996643},
	{1868.1669921875,1308.9814453125,16.922344207764},
	{1931.69921875,1336.7529296875,9.96875},
	{1947.2333984375,1397.4990234375,9.2578125},
	{1910.7255859375,1401.818359375,9.2578125},
	{1953.0556640625,1343.958984375,15.3671875},
	{1993.6875,1241.4521484375,10.8203125},
	{2008.46875,1169.8330078125,10.8203125},
	{1966.9130859375,1102.0322265625,10.8203125},
	{1952.001953125,1101.9404296875,10.8203125},
	{1896.0146484375,1142.3056640625,10.8203125},
	{1862.666015625,1190.12109375,10.836782455444},
	{1859.01171875,1112.12890625,10.8203125},
	{1858.84765625,1079.8623046875,10.8203125},
	{1859.0625,1050.431640625,10.8203125},
	{1858.92578125,994.1474609375,10.8203125},
	{1859.4013671875,937.771484375,10.8203125},
	{1877.474609375,925.0947265625,10.8203125},
	{1927.7822265625,924.265625,10.831217765808},
	{1916.3369140625,970.4931640625,10.8203125},
	{1909.0107421875,1017.82421875,10.8203125},
	{1920.2158203125,964.525390625,10.8203125},
	{1960.115234375,953.115234375,10.8203125},
	{1999.6953125,991.48046875,10.8203125},
	{2021.9443359375,1003.3857421875,10.8203125},
	{2021.2001953125,1009.5908203125,10.8203125},
	{1946.427734375,2050.9853515625,10.8203125},
	{1968.236328125,2294.9638671875,16.455863952637},
	{1998.7578125,2302.7958984375,10.8203125},
	{2004.5810546875,2309.9541015625,10.8203125},
	{2127.40625,2377.3232421875,10.8203125},
	{2189.416015625,2399.2802734375,10.8203125},
	{2189.416015625,2399.2802734375,10.8203125},
	{2166.443359375,2478.806640625,10.8203125},
	{2159.64453125,2465.7568359375,10.8203125},
	{2114.9013671875,2498.763671875,14.83895111084},
	{2099.5068359375,2492.00390625,11.078125},
	{2057.7861328125,2483.947265625,11.078125},
	{2176.8447265625,2419.779296875,73.03385925293},
	{2119.2587890625,884.3779296875,11.186832427979},
	{2159.072265625,956.1904296875,11.1015625},
	{2249.9599609375,960.7021484375,10.812986373901},
	{2491.2060546875,918.8837890625,11.0234375},
	{2502.2255859375,926.1259765625,11.0234375},
	{2196.83203125,1062.1728515625,10.8203125},
	{2182.6611328125,1114.8740234375,12.6484375},
	{2413.5078125,1122.8271484375,10.8203125},
	{2478.779296875,1063.951171875,10.812517166138},
	{2499.1787109375,1149.474609375,22.023197174072},
	{2625.6640625,1191.623046875,10.794861793518},
	{2633.263671875,1192.841796875,26.918153762817},
	{2581.3623046875,1062.3056640625,11.157404899597},
	{2546.0205078125,1106.1640625,10.8203125},
	{2540.919921875,1232.1962890625,10.958621025085},
	{2477.7119140625,1276.30859375,10.8125},
	{2448.529296875,1300.859375,10.8203125},
	{2178.7080078125,1292.08203125,10.8203125},
	{2178.1796875,1285.7978515625,10.8203125},
	{2237.60546875,1284.345703125,10.8203125},
	{2180.833984375,1448.6962890625,10.8203125},
	{2178.2666015625,1516.650390625,10.8203125},
	{2153.0166015625,1490.373046875,10.8203125},
	{2272.4833984375,1518.0166015625,30.031227111816},
	{2297.7109375,1469.025390625,36.421875},
	{2418.9482421875,1431.9580078125,10.8203125},
	{2465.544921875,1405.8095703125,10.90625},
	{2533.041015625,1398.083984375,10.90625},
	{2567.5322265625,1402.701171875,11.066242218018},
	{2557.7509765625,1363.9140625,10.8203125},
	{2511.9814453125,1360.2021484375,10.827831268311},
	{2533.5537109375,1507.3662109375,11.621562004089},
	{2567.30078125,1552.279296875,13.40625},
	{2460.572265625,1558.572265625,11.78125},
	{2340.6484375,1576.1884765625,10.8203125},
	{2299.3759765625,1564.9033203125,10.8203125},
	{2308.8681640625,1648.3955078125,10.8203125},
	{2284.109375,1722.8798828125,11.046875},
	{2160.9697265625,1640.72265625,11.141441345215},
	{2154.6376953125,1742.34375,11.107455253601},
	{2337.4521484375,1758.85546875,12.453807830811},
	{2436.3916015625,1672.55859375,10.8203125},
	{2391.0537109375,1682.572265625,14.281055450439},
	{2378.78515625,1681.8125,14.281055450439},
	{2359.9970703125,1677.62109375,14.281055450439},
	{2359.4423828125,1669.43359375,14.281055450439},
	{2359.2080078125,1662.583984375,14.281055450439},
	{2515.3623046875,1657.0458984375,11.0234375},
	{2510.2685546875,1680.44921875,11.0234375},
	{2491.578125,1680.6865234375,11.0234375},
	{2480.6259765625,1681.3154296875,11.0234375},
	{2399.8466796875,1838.314453125,11.65625},
	{2277.68359375,1865.5302734375,10.8203125},
	{2224.6591796875,1843.017578125,10.8203125},
	{2204.5087890625,1899.7978515625,10.8203125},
	{2375.44921875,2044.087890625,10.8203125},
	{2545.6455078125,1972.0263671875,10.8203125},
	{2634.0810546875,1979.8349609375,14.116060256958},
	{2654.6181640625,1979.4892578125,14.116060256958},
	{2646.3984375,2015.9638671875,10.81704044342},
	{2637.265625,2017.2587890625,10.8203125},
	{2613.2822265625,2050.720703125,14.116060256958},
	{2470.232421875,2124.7041015625,10.8203125},
	{2406.3818359375,2125.59765625,10.9314661026},
	{2326.208984375,2118.970703125,10.828125},
	{2220.5615234375,2124.310546875,10.8203125},
	{2166.064453125,2162.904296875,10.8203125},
	{2257.6494140625,2161.7294921875,10.8203125},
	{2371.5078125,2166.208984375,10.826242446899},
	{2446.927734375,2162.4189453125,10.8203125},
	{2609.2236328125,2144.65625,14.116060256958},
	{2636.4287109375,2183.9091796875,10.8203125},
	{2611.072265625,2183.228515625,10.812986373901},
	{2601.9326171875,2190.22265625,14.116060256958},
	{2602.3974609375,2202.5283203125,14.116060256958},
	{2624.9462890625,2200.6953125,10.8203125},
	{2619.8818359375,2199.4599609375,10.8203125},
	{2605.30859375,2208.388671875,10.8203125},
	{2604.0712890625,2212.0478515625,10.8203125},
	{2636.3720703125,2351.666015625,10.8203125},
	{2628.2978515625,2347.75390625,10.8203125},
	{2572.455078125,2331.640625,17.822208404541},
	{2583.091796875,2366.2529296875,17.8203125},
	{2610.43359375,2417.9580078125,10.8203125},
	{2622.5302734375,2417.6943359375,10.8203125},
	{2516.173828125,2225.677734375,10.8203125},
	{2453.9091796875,2226.2451171875,10.866273880005},
	{2429.359375,2226.2294921875,10.948439598083},
	{2345.5625,2273.11328125,8.1477851867676},
	{2352.953125,2307.685546875,8.1477851867676},
	{2393.275390625,2307.5244140625,8.140625},
	{2363.90625,2377.080078125,10.8203125},
	{2445.9287109375,2376.3408203125,12.163512229919},
	{2448.240234375,2257.0556640625,10.8203125},
	{2488.9228515625,2397.712890625,10.8203125},
	{2484.8642578125,2356.818359375,4.2109375},
	{2491.443359375,2397.615234375,4.2109375},
	{2248.23828125,2397.7373046875,10.8203125},
	{2212.654296875,2341.794921875,10.8203125},
	{2180.888671875,2292.33984375,10.8203125},
	{2243.9453125,2522.1337890625,10.8203125},
	{2271.673828125,2537.2412109375,10.8203125},
	{2321.2998046875,2531.94140625,10.8203125},
	{2331.1904296875,2531.1513671875,10.8203125},
	{952.1337890625,-910.8427734375,45.765625},
	{813.654296875,-1005.595703125,27.943950653076},
	{766.28515625,-1011.6015625,24.109375},
	{976.5546875,-1070.9052734375,26.988595962524},
	{976.326171875,-1091.7255859375,23.934619903564},
	{972.2578125,-1122.3212890625,23.846771240234},
	{982.3046875,-1162.3857421875,25.0859375},
	{921.6982421875,-1299.1845703125,14.09375},
	{922.126953125,-1287.5625,14.40625},
	{919.2177734375,-1266.0234375,15.171875},
	{919.419921875,-1252.0859375,16.380939483643},
	{726.51953125,-1275.85546875,13.6484375},
	{954.126953125,-1336.431640625,13.538691520691},
	{875.08984375,-1504.677734375,12.657918930054},
	{851.09375,-1519.935546875,13.691524505615},
	{878.4921875,-1514.6591796875,14.352069854736},
	{762.6962890625,-1563.6318359375,13.553644180298},
	{732.2548828125,-1477.767578125,5.46875},
	{719.1220703125,-1476.7841796875,5.46875},
	{789.1220703125,-1324.5078125,-0.5078125},
	{852.841796875,-1391.2421875,-0.50146150588989},
	{843.9853515625,-1390.5986328125,-1.3003606796265},
	{726.6962890625,-1450.935546875,17.6953125},
	{608.0302734375,-1475.2041015625,14.644786834717},
	{652.9443359375,-1618.94921875,15.0},
	{655.5556640625,-1640.4521484375,15.861747741699},
	{655.876953125,-1650.0732421875,15.408567428589},
	{487.3505859375,-1639.61328125,23.703125},
	{299.43359375,-1611.5322265625,33.120010375977},
	{279.83984375,-1615.5439453125,33.253612518311},
	{277.546875,-1599.9365234375,33.069110870361},
	{357.3642578125,-1394.314453125,14.438846588135},
	{374.984375,-1384.0029296875,14.462802886963},
	{391.921875,-1374.3095703125,14.819017410278},
	{595.61328125,-1250.6875,18.295663833618},
	{617.681640625,-1331.0546875,13.644295692444},
	{297.146484375,-1490.69140625,24.59375},
	{288.357421875,-1544.0625,24.59375},
	{364.099609375,-1557.318359375,32.909343719482},
	{409.57421875,-1601.76171875,27.14465713501},
	{478.35546875,-1537.6982421875,19.478967666626},
	{476.6376953125,-1497.7607421875,20.458106994629},
	{660.5947265625,-1525.875,14.8515625},
	{657.7060546875,-1480.9951171875,14.8515625},
	{684.3662109375,-1435.517578125,14.8515625},
	{598.333984375,-1285.1640625,15.859577178955},
	{895.5986328125,-1116.953125,24.197673797607},
	{899.21875,-1068.703125,24.479953765869},
	{811.0830078125,-1092.8251953125,25.78458404541},
	{820.0927734375,-1092.373046875,25.795583724976},
	{820.4970703125,-1109.12109375,25.796077728271},
	{810.7294921875,-1109.046875,25.784152984619},
	{811.0224609375,-1101.0810546875,25.784509658813}
};

enum {
	DEER_STATE_ALIVE,
	DEER_STATE_DEAD
}
enum E_DEER_DATA {
	STREAMER_TAG_OBJECT:deerObject,
	Float:deerHealth,
	deerState
};
new DeerData[MAX_DEERS][E_DEER_DATA];

new Float:DeerSpawn[][3]=
{
	{-475.22012, -387.80862, 14.93388},
	{-814.95184, -789.86145, 152.69458},
	{-820.04846, -801.82751, 149.54356},
	{-843.11810, -812.59625, 149.03250},
	{-1061.10583, -989.05859, 128.63142},
	{-1087.23853, -975.28485, 128.63142},
	{-1095.62305, -949.64294, 128.63142},
	{-998.71204, -1580.69971, 75.74928},
	{-993.51556, -1585.88379, 75.74928},
	{-815.17487, -2020.73645, 14.63516},
	{-448.08316, -2160.36255, 86.19398},
	{-710.33075, -2455.31836, 67.16925},
	{-692.01318, -2439.49121, 64.41492},
	{-1322.94849, -2110.92896, 27.15998},
	{-1264.87451, -2112.70215, 24.73434},
	{-1659.87561, -2194.57227, 32.78931},
	{ -1792.07507, -2175.78125, 72.54773},
	{ -1939.97278, -1903.64844, 83.94247},
	{ -2087.59448, -2138.61768, 47.42846},
	{-2066.40259, -2158.11450, 47.42846},
	{-2079.26050, -2160.11963, 47.42846}
};

enum 
{
	LOOT_RANDOM_DROP,
	LOOT_PLAYER_DROP,
	LOOT_CAR_DROP
}
enum E_LOOT_INFO 
{
	lootExists,
	Float:lootPos[3],
	STREAMER_TAG_OBJECT:lootObject,
	Text3D:lootLabel,
	lootItem[32],
	lootAmount,
	Float:lootRange,
	lootType,
	lootExtraID
};
new LootData[MAX_LOOT][E_LOOT_INFO];

enum E_ITEM_OPT 
{
	e_item_name[32],
	e_item_model,
	e_item_type,
	e_item_drop
};

enum 
{
	ITEM_TYPE_LOW,
	ITEM_TYPE_MEDIUM,
	ITEM_TYPE_HIGH
}
new g_ItemInfo[][E_ITEM_OPT] = 
{
	{"Bandage", 11747, ITEM_TYPE_LOW, true},
	{"Apple", 19575, ITEM_TYPE_LOW, true},
	{"Burger", 2703, ITEM_TYPE_LOW, true},
	{"Engine", 19917, ITEM_TYPE_HIGH, true},
	{"Jerry Can", 1650, ITEM_TYPE_MEDIUM, true},
	{"Survivor Satchel", 3026, ITEM_TYPE_LOW, false},
	{"Scavenger Knapsack", 371, ITEM_TYPE_LOW, false},
	{"Hunter Backpack", 1310, ITEM_TYPE_MEDIUM, false},
	{"Apocalypse Backpack", 1550, ITEM_TYPE_HIGH, false},
	{"Water Bottle", 1486, ITEM_TYPE_LOW, true},
	{"Raw Chicken Leg", 2804, ITEM_TYPE_LOW, true},
	{"Cooked Chicken", 19847, ITEM_TYPE_LOW, true},
	{"Bread", 19883, ITEM_TYPE_LOW, true},
	{"Vehicle Parts", 19627, ITEM_TYPE_MEDIUM, true}
};

enum E_INVENTORY_DATA 
{
	invID,
	invExists,
	invName[32],
	invAmount
};
new InventoryData[MAX_PLAYERS][MAX_INVENTORY][E_INVENTORY_DATA];

enum E_SURVIVOR_DATA 
{
    pID,
    pPassword[65],
    pSalt[65],
    pCreated,
    pUsername[MAX_PLAYER_NAME],
    pSpawned,
    Float:pPos[4],
    pInterior,
    pWorld,
    Float:pHunger,
    Float:pThirst,
    pScore,
    pAdmin,
    pKill,
    pDeath,
    pVIP,
    pVIPTime,
    pKicked,
    pSkin,
    pLoggedIn,
	pBackpack,
    Float:pHealth,
    Float:pArmour,
	pInjured,
	pAttempt
};
new SurvivorData[MAX_PLAYERS][E_SURVIVOR_DATA];

new ScreenStatus[MAX_PLAYERS] = 0;
new FadeTDTimer[MAX_PLAYERS] = -1;

new ListedItems[MAX_PLAYERS][100];

enum E_VEHICLE_DATA 
{
	vehicleTire,
	vehicleEngine,
	vehicleParts,
	Text3D:vehicleLabel,
	Float:vFuel
};
new VehicleData[MAX_VEHICLES][E_VEHICLE_DATA];

new PlayerText:HBEGUI[MAX_PLAYERS][2];
new PlayerText:HEALTHBAR[MAX_PLAYERS];
new PlayerText:ARMORBAR[MAX_PLAYERS];
new PlayerText:ARMORAMOUNT[MAX_PLAYERS];
new PlayerText:THIRSTBAR[MAX_PLAYERS];
new PlayerText:THIRSTAMOUNT[MAX_PLAYERS];
new PlayerText:HUNGERBAR[MAX_PLAYERS];
new PlayerText:HUNGERAMOUNT[MAX_PLAYERS];


/* Main Functions */

IsWeaponModel(model) 
{
    new const g_aWeaponModels[] = 
	{
		0, 331, 333, 334, 335, 336, 337, 338, 339, 341, 321, 322, 323, 324,
		325, 326, 342, 343, 344, 0, 0, 0, 346, 347, 348, 349, 350, 351, 352,
		353, 355, 356, 372, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
		367, 368, 368, 371
    };
    for (new i = 0; i < sizeof(g_aWeaponModels); i ++) if (g_aWeaponModels[i] == model) 
	{
        return 1;
	}
	return 0;
}

Float:GetDistance3D(const Float:x1, const Float:y1, const Float:z1, const Float:x2, const Float:y2, const Float:z2)
{
	return floatsqroot(floatpower(x1-x2,2.0)+floatpower(y1-y2,2.0)+floatpower(z1-z2,2.0));
}

stock token_by_delim(const string[], return_str[], delim, start_index)
{
	new x=0;
	while(string[start_index] != EOS && string[start_index] != delim) {
	    return_str[x] = string[start_index];
	    x++;
	    start_index++;
	}
	return_str[x] = EOS;
	if(string[start_index] == EOS) start_index = (-1);
	return start_index;
}

stock LoadVehiclesFromFile(const filename[])
{
	new File:file_ptr;
	new line[256];
	new var_from_line[64];
	new vehicletype;
	new Float:SpawnX;
	new Float:SpawnY;
	new Float:SpawnZ;
	new Float:SpawnRot;
    new Color1, Color2;
	new index;
	new vehicles_loaded;

	file_ptr = fopen(filename,filemode:io_read);
	if(!file_ptr) return 0;

	vehicles_loaded = 0;

	while(fread(file_ptr,line,256) > 0)
	{
	    index = 0;

	    // Read type
  		index = token_by_delim(line,var_from_line,',',index);
  		if(index == (-1)) continue;
  		vehicletype = strval(var_from_line);
   		if(vehicletype < 400 || vehicletype > 611) continue;

  		// Read X, Y, Z, Rotation
  		index = token_by_delim(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnX = floatstr(var_from_line);

  		index = token_by_delim(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnY = floatstr(var_from_line);

  		index = token_by_delim(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnZ = floatstr(var_from_line);

  		index = token_by_delim(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnRot = floatstr(var_from_line);

  		// Read Color1, Color2
  		index = token_by_delim(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		Color1 = strval(var_from_line);

  		index = token_by_delim(line,var_from_line,';',index+1);
  		Color2 = strval(var_from_line);
  		
		CreateVehicle(vehicletype, SpawnX, SpawnY, SpawnZ, SpawnRot, Color1, Color2, 0);
		vehicles_loaded++;
	}

	fclose(file_ptr);
	printf("Loaded %d vehicles from: %s",vehicles_loaded,filename);
	return vehicles_loaded;
}

ListedItemReset(playerid) 
{
	for(new i = 0; i < 100; i++) 
	{
		ListedItems[playerid][i] = -1;
	}
	return 1;
}

ResetAccountData(playerid) 
{
	SurvivorData[playerid][pInjured] = 0;
    SurvivorData[playerid][pID] = 0;
    SurvivorData[playerid][pSkin] = 2;
    SurvivorData[playerid][pScore] = 0;
    SurvivorData[playerid][pCreated] = 0;
    SurvivorData[playerid][pInterior] = 0;
    SurvivorData[playerid][pWorld] = 0;
    SurvivorData[playerid][pSpawned] = false;
    SurvivorData[playerid][pLoggedIn] = false;
    SurvivorData[playerid][pKicked] = false;
    SurvivorData[playerid][pAdmin] = 0;
	SurvivorData[playerid][pBackpack] = 0;
    SurvivorData[playerid][pSpawned] = false;
    format(SurvivorData[playerid][pUsername], MAX_PLAYER_NAME, "_");
	SurvivorData[playerid][pHealth] = float(10000);
	ListedItemReset(playerid);
	SurvivorData[playerid][pHunger] = 100.0;
	SurvivorData[playerid][pThirst] = 100.0;

	ScreenStatus[playerid] = 0;
	FadeTDTimer[playerid] = -1;
}

ReturnDate(bool:panjang = true)
{
	static
	    date[36];

	getdate(date[2], date[1], date[0]);
	gettime(date[3], date[4], date[5]);

	if(panjang) {
		format(date, sizeof(date), "%02d/%02d/%d %02d:%02d", date[0], date[1], date[2], date[3], date[4]);
	}
	else format(date, sizeof(date), "%02d/%02d/%d", date[0], date[1], date[2]);
	return date;
}

ReturnIP(playerid) 
{
    new ip[24];
    GetPlayerIp(playerid, ip, sizeof(ip));
    return ip;
}

SendClientMessageEx(playerid, color, const text[], {Float, _}:...)
{
    static
        args,
            str[144];

    if((args = numargs()) == 3)
    {
            SendClientMessage(playerid, color, text);
    }
    else
    {
        while (--args >= 3)
        {
            #emit LCTRL 5
            #emit LOAD.alt args
            #emit SHL.C.alt 2
            #emit ADD.C 12
            #emit ADD
            #emit LOAD.I
            #emit PUSH.pri
        }
        #emit PUSH.S text
        #emit PUSH.C 144
        #emit PUSH.C str
        #emit PUSH.S 8
        #emit SYSREQ.C format
        #emit LCTRL 5
        #emit SCTRL 4

        SendClientMessage(playerid, color, str);

        #emit RETN
    }
    return 1;
}

SQL_Connect() 
{
    mysql_log(ERROR | WARNING);
	sql_c = mysql_connect(DATABASE_ADDRESS,DATABASE_USERNAME,DATABASE_PASSWORD,DATABASE_NAME);

    if(mysql_errno(sql_c) != 0) {
        SendRconCommand("password lk&iu&sds7*)");
        SendRconCommand("hostname Occurred error connection to database ...");

        new error[128];
        mysql_error(error, sizeof(error), sql_c);
        printf("[Database] Failed! Error: [%d] %s", mysql_errno(sql_c), error);

        return 0;
    }
    SetGameModeText("Rev 1.0.1 beta!");
    printf("[Database] Connected to database!");
    return 1;
}

GetName(playerid) 
{
    new name[24];
    GetPlayerName(playerid, name, sizeof(name));
    return name;
}

SQL_CheckAccount(playerid) 
{
    TogglePlayerSpectating(playerid,true);

    new query[156];
    mysql_format(sql_c, query, sizeof(query), "SELECT * FROM `accounts` WHERE `Username` = '%e' LIMIT 1;", GetName(playerid));
    mysql_tquery(sql_c, query, "OnCheckAccount", "d", playerid);
    return 1;
}

ShowRegisterDialog(playerid) 
{
    ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Register Account", ""WHITE"Welcome to a world filled with chaos. To join the survival againts zombies, please register yourself.\n\n"LIGHTBLUE"(input) "WHITE"please use password that you haven't use before to prevent hacker", "Next", "Close");
    return 1;
}

ShowLoginDialog(playerid) {
    ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Login Account", ""WHITE"Enter your login information below to continue your survival against the zombie menace.\n\n"LIGHTBLUE"(input) "WHITE"type the password that you use for register before", "Login", "Close");
    return 1;
}
function OnCheckAccount(playerid) {
    if(!cache_num_rows()) {
        ShowRegisterDialog(playerid);
    }
    else {

        cache_get_value_name_int(0, "ID", SurvivorData[playerid][pID]);
        cache_get_value_name(0, "Password", SurvivorData[playerid][pPassword]);
        cache_get_value_name(0, "Salt", SurvivorData[playerid][pSalt]);
        ShowLoginDialog(playerid);
    }
    return 1;
}

function OnAccountLoaded(playerid) {
    if(cache_num_rows()) {

        cache_get_value_name_int(0, "ID", SurvivorData[playerid][pID]);
        cache_get_value_name_int(0, "Skin", SurvivorData[playerid][pSkin]);
        cache_get_value_name_int(0, "Score", SurvivorData[playerid][pScore]);
        cache_get_value_name_int(0, "Created", SurvivorData[playerid][pCreated]);
        cache_get_value_name_float(0, "PosX", SurvivorData[playerid][pPos][0]);
        cache_get_value_name_float(0, "PosY", SurvivorData[playerid][pPos][1]);
        cache_get_value_name_float(0, "PosZ", SurvivorData[playerid][pPos][2]);
        cache_get_value_name_float(0, "PosA", SurvivorData[playerid][pPos][3]);
        cache_get_value_name_int(0, "Interior", SurvivorData[playerid][pInterior]);
        cache_get_value_name_int(0, "VirtualWorld", SurvivorData[playerid][pWorld]);
        cache_get_value_name_float(0, "Armour", SurvivorData[playerid][pArmour]);
        cache_get_value_name_float(0, "Health", SurvivorData[playerid][pHealth]);
        cache_get_value_name_int(0, "Admin", SurvivorData[playerid][pAdmin]);
        cache_get_value_name_int(0, "VIP", SurvivorData[playerid][pVIP]);
        cache_get_value_name_int(0, "VIPTime", SurvivorData[playerid][pVIPTime]);
        cache_get_value_name_int(0, "Kills", SurvivorData[playerid][pKill]);
        cache_get_value_name_int(0, "Death", SurvivorData[playerid][pDeath]);
		cache_get_value_name_int(0, "Backpack", SurvivorData[playerid][pBackpack]);
		cache_get_value_name_int(0, "Injured", SurvivorData[playerid][pInjured]);
		cache_get_value_name_float(0, "Hunger", SurvivorData[playerid][pHunger]);
		cache_get_value_name_float(0, "Thirst", SurvivorData[playerid][pThirst]);

	 	SetSpawnInfo(playerid, NO_TEAM, SurvivorData[playerid][pSkin], SurvivorData[playerid][pPos][0], SurvivorData[playerid][pPos][1], SurvivorData[playerid][pPos][2], SurvivorData[playerid][pPos][3], WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
        SetPlayerColor(playerid, X11_WHITE);

        CallRemoteFunction("OnAccountLoadEnded", "d", playerid);
        SetPlayerScore(playerid, SurvivorData[playerid][pScore]);

        TogglePlayerSpectating(playerid, false);
        
		mysql_tquery(sql_c, va_return("SELECT * FROM `inventory` WHERE `ExtraID` = '%d' LIMIT %d", SurvivorData[playerid][pID], MAX_INVENTORY), "LoadPlayerInventory", "d", playerid);
        //mysql_tquery(sql_c, va_return("SELECT * FROM `weapons` WHERE `userid` = '%d';", GetPlayerSQLID(playerid)), "LoadPlayerWeapon", "d", playerid);
    }
    return 1;
}

function LoadPlayerInventory(playerid) 
{
	for(new i = 0; i < cache_num_rows(); i++) 
	{
		cache_get_value_name(i, "Name", InventoryData[playerid][i][invName], 32);
		cache_get_value_name_int(i, "Amount", InventoryData[playerid][i][invAmount]);
		cache_get_value_name_int(i, "ID", InventoryData[playerid][i][invID]);
		InventoryData[playerid][i][invExists] = true;
	}
	return 1;
}

SQL_SaveAccountData(playerid) 
{
	if(!SurvivorData[playerid][pSpawned])
		return 1;

    new query_buff[1012];

    GetPlayerPos(playerid, SurvivorData[playerid][pPos][0], SurvivorData[playerid][pPos][1], SurvivorData[playerid][pPos][2]);
    GetPlayerFacingAngle(playerid, SurvivorData[playerid][pPos][3]);

    mysql_format(sql_c, query_buff, sizeof(query_buff), "UPDATE `accounts` SET `Skin` = '%d', `Score` = '%d', `Created` = '%d', `Skin` = '%d', `Backpack` = '%d', `Injured` = '%d'",
        SurvivorData[playerid][pSkin],
        SurvivorData[playerid][pScore],
        SurvivorData[playerid][pCreated],
        SurvivorData[playerid][pSkin],
		SurvivorData[playerid][pBackpack],
		SurvivorData[playerid][pInjured]
    );
    mysql_format(sql_c, query_buff, sizeof(query_buff), "%s, `PosX` = '%f', `PosY` = '%f', `PosZ` = '%f', `PosA` = '%f', `Interior` = '%d', `VirtualWorld` = '%d', `Hunger` = '%f', `Thirst` = '%f'",
        query_buff,
        SurvivorData[playerid][pPos][0],
        SurvivorData[playerid][pPos][1],
        SurvivorData[playerid][pPos][2],
        SurvivorData[playerid][pPos][3],
        SurvivorData[playerid][pInterior],
        SurvivorData[playerid][pWorld],
		SurvivorData[playerid][pHunger],
		SurvivorData[playerid][pThirst]
    );
    mysql_format(sql_c, query_buff, sizeof(query_buff), "%s, `Armour` = '%.4f', `Health` = '%.4f', `Admin` = '%d'",
        query_buff,
        SurvivorData[playerid][pArmour],
        SurvivorData[playerid][pHealth],
        SurvivorData[playerid][pAdmin]
    );
    mysql_format(sql_c, query_buff, sizeof(query_buff), "%s, `VIP` = '%d', `VIPTime`= '%d', `Kills` = '%d', `Death` = '%d'",
        query_buff,
        SurvivorData[playerid][pVIP],
        SurvivorData[playerid][pVIPTime],
        SurvivorData[playerid][pKill],
        SurvivorData[playerid][pDeath]
    );
    mysql_format(sql_c, query_buff, sizeof(query_buff), "%s WHERE `ID` = '%d'", query_buff, SurvivorData[playerid][pID]);
    mysql_tquery(sql_c, query_buff);

    return 1;
}
function OnAccountRegistered(playerid) {

    SurvivorData[playerid][pID] = cache_insert_id();
    SurvivorData[playerid][pSkin] = 299;
    SurvivorData[playerid][pLoggedIn] = true;

    new x = random(sizeof(randomSpawns));
	SetSpawnInfo(playerid, NO_TEAM, SurvivorData[playerid][pSkin], randomSpawns[x][0], randomSpawns[x][1], randomSpawns[x][2], SurvivorData[playerid][pPos][3], WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
    TogglePlayerSpectating(playerid, false);

    ShowPlayerDialog(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, "Survivor!", "Welcome to The Last Hope!\nType \"/cmds\" for all commands & guide that exists on the server.", "Close", "");
    CallLocalFunction("OnAccountLoadEnded", "d", playerid);
    
    SQL_SaveAccountData(playerid);
    return 1;
}

/* Item Funcs */

GetItemState(itemstate) 
{
	new name[24];

	switch(itemstate) 
	{
		case LOOT_RANDOM_DROP: name = "Ground";
		case LOOT_PLAYER_DROP: name = "Ground";
		case LOOT_CAR_DROP: name = "Destroyed Car";
	}
	return name;
}
IsBackpackItem(const itemname[]) 
{
	if(!strcmp(itemname, "Survivor Satchel", true))
		return 1;

	if(!strcmp(itemname, "Scavenger Knapsack", true))
		return 1;

	if(!strcmp(itemname, "Hunter Backpack", true))
		return 1;

	if(!strcmp(itemname, "Apocalypse Backpack", true))
		return 1;

	return 0;
}

GetItemBackpackLevel(const itemname[]) 
{
	if(!strcmp(itemname, "Survivor Satchel", true))
		return 1;

	if(!strcmp(itemname, "Scavenger Knapsack", true))
		return 2;

	if(!strcmp(itemname, "Hunter Backpack", true))
		return 3;

	if(!strcmp(itemname, "Apocalypse Backpack", true))
		return 4;

	return 0;
}
GetItemModel(const itemname[]) 
{
	new model = 0;
	for(new i = 0; i < sizeof(g_ItemInfo); i++) if(!strcmp(g_ItemInfo[i][e_item_name], itemname, true)) 
	{
		model = g_ItemInfo[i][e_item_model];
		break;
	}
	return model;
}

GetRandomItem() {
	new randomIndex, str[32];

    randomIndex = random(sizeof(g_ItemInfo));

	format(str, sizeof(str), "%s", g_ItemInfo[randomIndex][e_item_name]);
	return str;
}

GetRandomItemHigh() {
	new randomIndex, str[32];

    do {
        randomIndex = random(sizeof(g_ItemInfo));
    } while (g_ItemInfo[randomIndex][e_item_type] != ITEM_TYPE_HIGH);

	format(str, sizeof(str), "%s", g_ItemInfo[randomIndex][e_item_name]);
	return str;
}

GetRandomItemForDrop() {
	new randomIndex, str[32];

    do {
        randomIndex = random(sizeof(g_ItemInfo));
    } while (g_ItemInfo[randomIndex][e_item_type] != ITEM_TYPE_LOW && g_ItemInfo[randomIndex][e_item_type] != ITEM_TYPE_MEDIUM);

	format(str, sizeof(str), "%s", g_ItemInfo[randomIndex][e_item_name]);
	return str;
}

/* Inventory Funcs */

IsInventoryCanDrop(const item[]) {
	new can_drop = true;
    for (new i = 0; i < sizeof(g_ItemInfo); i ++) if(!strcmp(g_ItemInfo[i][e_item_name], item, true))
    {
        if(!g_ItemInfo[i][e_item_drop])
        {
            can_drop = false;
			break;
        }
    }
	return can_drop;
}

CountPlayerItem(playerid) {
	new count = 0;

	for(new i = 0; i < MAX_INVENTORY; i++) if(InventoryData[playerid][i][invExists]) {
		count++;
	}
	return count;
}

GetFreeInventoryID(playerid) {

	new idx = -1;
	for(new i = 0; i < GetPlayerLimitInventory(playerid); i++) if(!InventoryData[playerid][i][invExists]) {
		idx = i;
		break;
	}
	return idx;
}


GetInventorySameMerge(playerid, const item[], id) {
	new idx = -1;
	for(new i = 0; i < MAX_INVENTORY; i++) if(InventoryData[playerid][i][invExists] && !strcmp(InventoryData[playerid][i][invName], item, true)) {

		if(id == i)
			continue;

		idx = i;
		break;
	}

	return idx;
}

GetInventorySame(playerid, const item[]) {
	new idx = -1;
	for(new i = 0; i < MAX_INVENTORY; i++) if(InventoryData[playerid][i][invExists] && !strcmp(InventoryData[playerid][i][invName], item, true)) {


		idx = i;
		break;
	}
	return idx;
}

RemovePlayerInventory(playerid, itemid) {

	if(InventoryData[playerid][itemid][invExists]) {
		InventoryData[playerid][itemid][invAmount] = 0;
		format(InventoryData[playerid][itemid][invName], 32, "\0");
		InventoryData[playerid][itemid][invExists] = false;

		mysql_tquery(sql_c, va_return("DELETE FROM `inventory` WHERE `ID` = '%d'", InventoryData[playerid][itemid][invID]));
	}
}

GetPlayerLimitInventory(playerid) {
	new limit = 0;
	switch(SurvivorData[playerid][pBackpack]) {
		case 0: limit = 5;
		case 1: limit = 10;
		case 2: limit = 15;
		case 3: limit = 17;
		case 4: limit = MAX_INVENTORY;
		default: limit = 5;
	}
	return limit;
}
AddLootToInventory(playerid, const item[], amount) 
{
	if(GetFreeInventoryID(playerid) == -1) 
	{
		Server(playerid, "There is no more slot on your inventory.");
		return -1;
	}

	new same = -1;

	same = GetInventorySame(playerid, item);

	if(same == -1) 
	{
		new id = GetFreeInventoryID(playerid);

		InventoryData[playerid][id][invExists] = true;
		InventoryData[playerid][id][invAmount] = amount;
		format(InventoryData[playerid][id][invName], 32, item);

		new query[256];
		mysql_format(sql_c, query, sizeof(query), "INSERT INTO `inventory` (`ExtraID`, `Name`, `Amount`) VALUES('%d','%e','%d')", SurvivorData[playerid][pID], item, amount);
		mysql_tquery(sql_c, query, "OnInventoryAdd", "dd", playerid, id);
	}
	else 
	{
		InventoryData[playerid][same][invAmount] += amount;
		SQL_UpdateInventory(playerid, same);
	}
	return 1;
}

function OnInventoryAdd(playerid, id) {
	InventoryData[playerid][id][invID] = cache_insert_id();
}

SQL_UpdateInventory(playerid, id) {
	new query[256];
	mysql_format(sql_c, query, sizeof(query), "UPDATE `inventory` SET `Amount` = '%d' WHERE `ID` = '%d' AND `ExtraID` = '%d'", InventoryData[playerid][id][invAmount], InventoryData[playerid][id][invID], SurvivorData[playerid][pID]);
	return mysql_tquery(sql_c, query);
}
/* Drop Loot Funcs */

function OnRespawnLoot(Float:x, Float:y, Float:z) {
	CreateLootDrop(GetRandomItemForDrop(), 1, x, y, z);
	return 1;
}

GetAnyLootNear(Float:x, Float:y, Float:z, Float:range, itemtype, id) 
{
    for (new i = 0; i < MAX_LOOT; i++) if(LootData[i][lootExists] && LootData[i][lootType] == itemtype && i != id) 
	{
		new Float:distance = GetDistance3D(x, y, z, LootData[i][lootPos][0], LootData[i][lootPos][1], LootData[i][lootPos][2]);
		if (distance <= range) 
		{
			return true; 
		}
    }
    return false; 
}
DestroyLoot(id)
{
	if(LootData[id][lootExists]) 
	{
		if(LootData[id][lootType] == LOOT_RANDOM_DROP) 
		{
			SetTimerEx("OnRespawnLoot", 900000, false, "fff", LootData[id][lootPos][0], LootData[id][lootPos][1], LootData[id][lootPos][2]);
		}
		LootData[id][lootExists] = false;
		LootData[id][lootAmount] = 0;

		DestroyDynamicObject(LootData[id][lootObject]);
		DestroyDynamic3DTextLabel(LootData[id][lootLabel]);

		format(LootData[id][lootItem], 32, "\0");
	}
	return 1;
}
GetFreeLootID() 
{
	new idx = -1;
	for(new i = 0; i < MAX_LOOT; i++) if(!LootData[i][lootExists]) 
	{
		idx = i;
		break;
	}
	return idx;
}

CreatePlayerLootDrop(itemname[], amount, Float:x, Float:y, Float:z) 
{
	new id, model;

	if((id = GetFreeLootID()) != -1) 
	{

		model = GetItemModel(itemname);

		LootData[id][lootExists] = true;

		if(IsWeaponModel(model))
		{
			LootData[id][lootObject] = CreateDynamicObject(model, x, y, z - 0.9, 93.7, 120.0, 120.0);
		}
		else 
		{
			LootData[id][lootObject] = CreateDynamicObject(model, x, y, z - 0.9, 0.0, 0.0, 0.0);
		}
		LootData[id][lootLabel] = CreateDynamic3DTextLabel(va_return("%s\nPress ALT LEFT to loot", itemname), -1, x, y, z-0.8, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 8.0);
		format(LootData[id][lootItem], 32, itemname);
		LootData[id][lootAmount] = amount;
		LootData[id][lootRange] = 1.3;

		LootData[id][lootPos][0] = x;
		LootData[id][lootPos][1] = y;
		LootData[id][lootPos][2] = z;

		LootData[id][lootType] = LOOT_PLAYER_DROP;

		return id;
	}
	return -1; // If GetFreeLootID() fails
}


CreateCarLoot(itemname[], amount, Float:x, Float:y, Float:z) 
{
	new id = -1;

	if((id = GetFreeLootID()) != -1) 
	{
		LootData[id][lootExists] = true;
		LootData[id][lootLabel] = CreateDynamic3DTextLabel(va_return("Destroyed Car\nPress ALT LEFT to loot", itemname),-1,x,y,z,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,-1,-1, 8.0);
		format(LootData[id][lootItem], 32, itemname);
		LootData[id][lootAmount] = amount;
		LootData[id][lootRange] = 6.0;

		LootData[id][lootPos][0] = x;
		LootData[id][lootPos][1] = y;
		LootData[id][lootPos][2] = z;

		LootData[id][lootType] = LOOT_CAR_DROP;
	}
	return id;
}

CreateLootDrop(itemname[], amount, Float:x, Float:y, Float:z) 
{
	new id = -1, model;

	if((id = GetFreeLootID()) != -1) 
	{
		model = GetItemModel(itemname);

		LootData[id][lootExists] = true;
		if(IsWeaponModel(model)) 
		{
			LootData[id][lootObject] = CreateDynamicObject(model, x, y, z - 0.9, 93.7, 120.0, 120.0);
		}
		else 
		{
			LootData[id][lootObject] = CreateDynamicObject(model, x, y, z - 0.9, 0.0, 0.0, 0.0);
		}
		LootData[id][lootLabel] = CreateDynamic3DTextLabel(va_return("%s\nPress ALT LEFT to loot", itemname),-1,x,y,z-0.8,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1, 8.0);
		format(LootData[id][lootItem], 32, itemname);
		LootData[id][lootAmount] = amount;
		LootData[id][lootRange] = 1.3;

		LootData[id][lootPos][0] = x;
		LootData[id][lootPos][1] = y;
		LootData[id][lootPos][2] = z;

		LootData[id][lootType] = LOOT_RANDOM_DROP;
	}
	return id;
}

/* Vehicle Things */

LoadSurvivalVehicle() {

	LoadVehiclesFromFile("vehicles/vehicles.txt");
	CreateVehicle(500,-1839.6999500,-1630.5999800,22.3000000,180.0000000,88,89,0); //Mesa
	CreateVehicle(500,-1983.0000000,949.7000100,45.7000000,180.0000000,88,89,0); //Mesa
	CreateVehicle(500,-702.7000100,946.9000200,12.4000000,90.0000000,88,89,0); //Mesa
	CreateVehicle(500,2426.8999000,1957.3000500,6.2000000,90.0000000,88,89,0); //Mesa
	CreateVehicle(445,1342.0000000,1980.6999500,10.8000000,0.0000000,95,10,0); //Admiral
	CreateVehicle(445,1860.0999800,-1872.1999500,13.5000000,0.0000000,95,10,0); //Admiral
	CreateVehicle(445,-2193.8000500,-2303.8000500,30.6000000,320.0000000,95,10,0); //Admiral
	CreateVehicle(471,-1960.8000500,-1601.4000200,86.5000000,240.0000000,19,69,0); //Quad
	CreateVehicle(471,-191.5000000,-247.8999900,1.0000000,319.9960000,19,69,0); //Quad
	CreateVehicle(471,648.5000000,876.9000200,-42.5000000,319.9930000,19,69,0); //Quad
	CreateVehicle(468,-85.9000000,1078.4000200,19.5000000,0.0000000,157,152,0); //Sanchez
	CreateVehicle(468,1877.8000500,1815.0999800,12.5000000,0.0000000,157,152,0); //Sanchez
	CreateVehicle(468,2173.0000000,1390.3000500,10.6000000,80.0000000,157,152,0); //Sanchez
	CreateVehicle(468,2265.1001000,15.2000000,27.2000000,79.9970000,157,152,0); //Sanchez
	CreateVehicle(468,1278.6999500,301.3999900,19.3000000,79.9970000,157,152,0); //Sanchez
	CreateVehicle(468,1960.0999800,-1627.5000000,15.7000000,329.9970000,157,152,0); //Sanchez
	CreateVehicle(468,-1673.0999800,438.5000000,6.9000000,329.9960000,157,152,0); //Sanchez
	CreateVehicle(468,-1735.8000500,1007.5999800,17.3000000,259.9960000,157,152,0); //Sanchez
	CreateVehicle(509,-1799.3000500,770.0000000,24.5000000,0.0000000,66,31,0); //Bike
	CreateVehicle(509,-2023.3000500,-96.4000000,34.8000000,0.0000000,66,31,0); //Bike
	CreateVehicle(509,-1965.0999800,120.2000000,27.3000000,0.0000000,66,31,0); //Bike
	CreateVehicle(509,-306.3999900,1039.5000000,19.3000000,270.0000000,66,31,0); //Bike
	CreateVehicle(509,-343.0000000,1537.3000500,75.2000000,180.0000000,66,31,0); //Bike
	CreateVehicle(509,1911.6999500,2315.1001000,10.4000000,180.0000000,66,31,0); //Bike
	CreateVehicle(509,2530.3000500,1456.1999500,10.4000000,180.0000000,66,31,0); //Bike
	CreateVehicle(509,1944.1999500,165.3999900,36.9000000,260.0000000,66,31,0); //Bike
	CreateVehicle(509,1320.5999800,204.3000000,19.2000000,259.9970000,66,31,0); //Bike
	CreateVehicle(509,797.5999800,-616.5999800,15.9000000,39.9970000,66,31,0); //Bike
	CreateVehicle(509,1011.2999900,-1088.0999800,23.4000000,129.9960000,66,31,0); //Bike
	CreateVehicle(604,1085.9000200,-1340.0000000,13.6000000,180.0000000,42,119,0); //Glendale
	CreateVehicle(468,166.0000000,-1955.8000500,3.5000000,0.0000000,132,4,0); //Sanchez
	CreateVehicle(604,-1108.1999500,-1638.0000000,76.3000000,270.0000000,106,122,0); //Glendale
	CreateVehicle(487,-73.8000000,-1172.3000500,5.9000000,70.0000000,39,47,0); //Maverick
	CreateVehicle(487,-1679.0999800,704.0000000,30.9000000,89.9990000,39,47,0); //Maverick
	CreateVehicle(487,186.8999900,1835.9000200,23.5000000,359.9950000,39,47,0); //Maverick
	CreateVehicle(487,364.8999900,2533.1999500,17.0000000,177.9940000,39,47,0); //Maverick
	CreateVehicle(487,894.4000200,-1376.8000500,25.3000000,183.9900000,39,47,0); //Maverick
	CreateVehicle(554,584.0000000,-1354.4000200,14.8000000,280.0000000,93,27,0); //Yosemite
	CreateVehicle(554,-31.3000000,-297.5000000,5.6000000,271.9980000,93,27,0); //Yosemite
	CreateVehicle(554,-1446.0999800,2627.5000000,56.0000000,271.9940000,93,27,0); //Yosemite
	CreateVehicle(431,-1988.3000500,145.8000000,27.8000000,0.0000000,122,117,0); //Bus
	CreateVehicle(431,1278.0999800,-1301.0000000,13.6000000,0.0000000,122,117,0); //Bus
	CreateVehicle(431,1696.6999500,1452.3000500,11.0000000,180.0000000,122,117,0); //Bus
	CreateVehicle(531,-157.3999900,2706.5000000,62.5000000,0.0000000,37,37,0); //Tractor
	CreateVehicle(531,-98.3000000,-26.9000000,3.1000000,340.0000000,37,37,0); //Tractor
	CreateVehicle(531,1057.4000200,-305.3999900,74.0000000,173.9990000,37,37,0); //Tractor
	CreateVehicle(418,1991.9000200,-1278.5000000,24.0000000,270.0000000,145,115,0); //Moonbeam
	CreateVehicle(418,2473.5000000,-1699.8000500,13.7000000,358.0000000,145,115,0); //Moonbeam
	CreateVehicle(455,2739.6999500,-2426.8999000,14.2000000,0.0000000,170,157,0); //Flatbed
	CreateVehicle(455,93.3000000,1934.4000200,18.5000000,0.0000000,170,157,0); //Flatbed
	CreateVehicle(433,-1511.0999800,477.2999900,7.8000000,90.0000000,95,10,0); //Barracks
	CreateVehicle(433,-885.9000200,1008.7000100,21.8000000,70.0000000,95,10,0); //Barracks
	CreateVehicle(542,-1949.9000200,585.9000200,35.0000000,0.0000000,71,53,0); //Clover
	CreateVehicle(542,-1649.1999500,-2235.6999500,30.0000000,0.0000000,71,53,0); //Clover
	CreateVehicle(542,1062.3000500,-1767.0000000,13.2000000,270.0000000,88,89,0); //Clover
	CreateVehicle(542,2136.8000500,1425.9000200,10.7000000,270.0000000,88,89,0); //Clover
	CreateVehicle(453,1627.5999800,570.5999800,0.0000000,90.0000000,158,164,0); //Reefer
	CreateVehicle(453,-1632.9000200,163.1000100,2.6000000,134.0000000,158,164,0); //Reefer
	CreateVehicle(473,-279.2999900,-345.6000100,0.0000000,200.0000000,158,164,0); //Dinghy
	CreateVehicle(473,510.8999900,603.5999800,0.0000000,199.9950000,158,164,0); //Dinghy
	CreateVehicle(473,724.0999800,-1501.9000200,0.0000000,199.9950000,158,164,0); //Dinghy
	CreateVehicle(484,165.2000000,632.7000100,0.0000000,200.0000000,132,137,0); //Marquis
	CreateVehicle(484,-610.0000000,1322.3000500,0.0000000,229.9950000,132,137,0); //Marquis
	CreateVehicle(484,-1466.4000200,1096.5999800,0.0000000,269.9930000,132,137,0); //Marquis
	CreateVehicle(470,-1350.4000200,460.6000100,7.3000000,0.0000000,95,10,0); //Patriot
	CreateVehicle(470,442.7000100,2221.8000500,38.1000000,110.0000000,95,10,0); //Patriot
	CreateVehicle(470,2843.3000500,899.4000200,10.9000000,39.9950000,95,10,0); //Patriot
	CreateVehicle(470,154.5000000,-317.5000000,1.7000000,351.9900000,95,10,0); //Patriot
	CreateVehicle(470,-567.9000200,-1481.6999500,10.3000000,40.0000000,95,10,0); //Patriot
	CreateVehicle(422,-377.2999900,-1441.4000200,25.8000000,0.0000000,30,46,0); //Bobcat
	CreateVehicle(422,2411.0000000,-1239.1999500,23.9000000,180.0000000,30,46,0); //Bobcat
	CreateVehicle(422,2360.8000500,-650.2000100,128.2000000,180.0000000,30,46,0); //Bobcat
	CreateVehicle(417,275.3999900,1380.5000000,10.9000000,0.0000000,-1,-1,0); //Leviathan
	CreateVehicle(511,1477.5999800,1210.5000000,12.3000000,0.0000000,100,100,0); //Beagle
	CreateVehicle(511,-1427.6999500,-949.5999800,203.3999900,270.0000000,100,100,0); //Beagle
	CreateVehicle(510,297.5000000,1397.4000200,9.6000000,0.0000000,134,68,0); //Mountain Bike
	CreateVehicle(510,1891.5000000,1592.3000500,10.4000000,130.0000000,134,68,0); //Mountain Bike
	CreateVehicle(510,2332.6001000,1390.0999800,36.1000000,359.9960000,134,68,0); //Mountain Bike
	CreateVehicle(468,1526.0000000,949.0999800,10.6000000,0.0000000,215,142,0); //Sanchez

	SurvivalVehicleConfig();
}

SurvivalVehicleConfig() {
	for(new vehicleid = 0; vehicleid < MAX_VEHICLES; vehicleid++) if(IsValidVehicle(vehicleid)) {

		SetVehicleHealth(vehicleid, RandomFloat(350.0, 600.0));

		SetVehicleRandomTire(vehicleid);

		VehicleData[vehicleid][vehicleParts] = random(5);
		VehicleData[vehicleid][vehicleEngine] = 0;
	}
	return 1;
}

SetVehicleRandomTire(vehicleid) 
{
	if(Vehicle_IsCar(vehicleid)) 
	{
		switch(random(6)) 
		{
			case 0: 
			{
				VehicleData[vehicleid][vehicleTire] = 3;
			}
			case 1: 
			{
				VehicleData[vehicleid][vehicleTire] = 1;
			}
			case 2: 
			{
				VehicleData[vehicleid][vehicleTire] = 2;
			}
			case 4: 
			{
				VehicleData[vehicleid][vehicleTire] = 2;
			}
			case 5: 
			{
				VehicleData[vehicleid][vehicleTire] = 1;
			}
		}
	}
	return 1;
}
/* Survival things */

SetupSurvivalData() 
{
	for(new i = 0; i < sizeof(LOOT_POS_RANDOM); i++) 
	{
		CreateLootDrop(GetRandomItemForDrop(), 1, LOOT_POS_RANDOM[i][0], LOOT_POS_RANDOM[i][1], LOOT_POS_RANDOM[i][2]);
	}

	for(new i = 0; i < CountDynamicObjects(); i++) if(Streamer_GetIntData(STREAMER_TYPE_OBJECT, i, E_STREAMER_MODEL_ID) == 3593) 
	{
		new Float:x, Float:y, Float:z;
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, i, E_STREAMER_X, x);
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, i, E_STREAMER_Y, y);
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, i, E_STREAMER_Z, z);

		if(GetAnyLootNear(x,  y, z, 5.0, LOOT_CAR_DROP, i))
			continue; 

		new rand_item = random(4);

		if(rand_item == 2)
		{
			CreateCarLoot(GetRandomItem(), 1, x, y, z);
		}
		else if(rand_item == 1) 
		{
			CreateCarLoot(GetRandomItemHigh(), 1, x, y, z);
		}
		else {
			CreateCarLoot(GetRandomItemForDrop(), 1, x, y, z);
		}
	}

	for(new i = 0; i < MAX_DEERS; i++) 
	{
		new x = random(sizeof(DeerSpawn));

		DeerData[i][deerObject] = CreateDynamicObject(19315, DeerSpawn[x][0], DeerSpawn[x][1], DeerSpawn[x][2], 0.0, 0.0, 0.0);
		DeerData[i][deerState] = DEER_STATE_ALIVE;
	}
	return 1;
}

SyncBackpackObject(playerid) 
{
	if(SurvivorData[playerid][pBackpack] == 1) { SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.160000, -0.116000, 0.000000, 0.000000, 0.000000, 0.000000, 1.141000, 1.279999, 1.176001); } /*SetPlayerAttachedObject( playerid, 1, 1580, 1, 0.200000, -0.019999, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000, 1.000000 );*/  // drug_red - Normal Backpack
	if(SurvivorData[playerid][pBackpack] == 2) { SetPlayerAttachedObject( playerid, 1, 371, 1, 0.000000, -0.100000, 0.000000, 3.000000, 90.000000, 1.000000, 1.000000, 1.000000, 1.000000 );  } // Small backpack
	if(SurvivorData[playerid][pBackpack] == 3) { SetPlayerAttachedObject( playerid, 1, 1310, 1, 0.000000, -0.100000, 0.000000, 3.000000, 90.000000, 1.000000, 1.000000, 1.000000, 1.000000 ); } // pikupparachute -
	if(SurvivorData[playerid][pBackpack] == 4) { SetPlayerAttachedObject( playerid, 1, 1550, 1, 0.000000, -0.100000, 0.000000, 3.000000, 90.000000, 1.000000, 1.000000, 1.000000, 1.000000 ); } // CJ_MONEY_BAG - Coyote Back pack

	return 1;
}

SetPlayerInjured(playerid) 
{
	SurvivorData[playerid][pInjured] = 1;
	SendClientMessage(playerid, X11_RED, "You are now in injured condition, you will bleed out in 3 minutes");
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.1, false, false, false, true, false, SYNC_NONE);
	SurvivorData[playerid][pHealth] = float(5000);
}

function OnPlayerPasswordChecked(playerid, bool:success)
{
	new str[256];
    format(str, sizeof(str), "{FFFFFF}Enter your login information below to continue your survival against the zombie menace.\n\n(input) type the password that you use for register before", GetName(playerid), SurvivorData[playerid][pAttempt]);
    
	if(!success)
	{
	    if(SurvivorData[playerid][pAttempt] < 5)
	    {
		    SurvivorData[playerid][pAttempt]++;
	        ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Login Account", str, "Login", "Close");
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, -1, "Kamu telah salah memasukan password sebanyak {FFFF00}5 kali!");
		    Kick(playerid);
			return 1;
		}
	}
	mysql_tquery(sql_c, va_return("SELECT * FROM `accounts` WHERE `ID` = '%d'", SurvivorData[playerid][pID]), "OnAccountLoaded", "d", playerid);
	return 1;
}

function OnPlayerUseItem(playerid, itemid, itemname[]) 
{
	return 1;
}

ShowInventory(playerid) 
{
	new string[512], count = 0;
	for(new i = 0; i < GetPlayerLimitInventory(playerid); i++) if(InventoryData[playerid][i][invExists]) 
	{
		strcat(string, va_return("%s\t%d\n", InventoryData[playerid][i][invName], InventoryData[playerid][i][invAmount]));
		ListedItems[playerid][count++] = i;
	}
	ShowPlayerDialog(playerid, DIALOG_INVENTORY, DIALOG_STYLE_TABLIST, va_return("Inventory (%d/%d)", CountPlayerItem(playerid), GetPlayerLimitInventory(playerid)), string, "Select", "Close");
	return 1;
}

/* Callbacks */

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, WEAPON:weaponid, bodypart)
{
	SetPlayerHealth(playerid, 100.0);
	if(SurvivorData[playerid][pHealth] <= 0 && !SurvivorData[playerid][pInjured]) 
	{
		SetPlayerInjured(playerid);
	}
	return 1;
}

public OnPlayerWeaponShot(playerid, WEAPON:weaponid, BULLET_HIT_TYPE:hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	return 1;
}
public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)
{
	if(PRESSED(KEY_WALK)) 
	{
		if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DUCK)
		{
			new count = 0, string[512];
			for(new i = 0; i < MAX_LOOT; i++) if(LootData[i][lootExists] && IsPlayerInRangeOfPoint(playerid, LootData[i][lootRange], LootData[i][lootPos][0], LootData[i][lootPos][1], LootData[i][lootPos][2])) {
				strcat(string, va_return("%s\tx%d\t%s\n", LootData[i][lootItem], LootData[i][lootAmount], GetItemState(LootData[i][lootType])));
				ListedItems[playerid][count++] = i;
			}
			ShowPlayerDialog(playerid, DIALOG_PICKUPITEM, DIALOG_STYLE_TABLIST, "Pickup Item", string, "Select", "Close");
		}
	}
	return 1;
}

public OnPlayerUpdate(playerid) 
{
	return 1;
}
public OnGameModeInit() 
{
	if(SQL_Connect()) 
	{
		ShowPlayerMarkers(PLAYER_MARKERS_MODE_OFF);
		ShowNameTags(false);
		SetNameTagDrawDistance(25.0);
		DisableInteriorEnterExits();
		EnableStuntBonusForAll(false);
		DisableNameTagLOS();
		UsePlayerPedAnims();
		LoadSurvivalVehicle();

		SetupSurvivalData();
	}
    return 1;
}
public OnPlayerConnect(playerid) 
{
    if(IsPlayerNPC(playerid))
        return 1;

    ResetAccountData(playerid);
    SetPlayerColor(playerid, X11_GREY);
	CreatePlayerTD(playerid);
    return 1;
}

public OnPlayerDisconnect(playerid, reason) 
{
	if(SurvivorData[playerid][pLoggedIn]) 
	{
		for(new i = 0; i < MAX_INVENTORY; i++) if(InventoryData[playerid][i][invExists]) 
		{
			SQL_UpdateInventory(playerid, i);
		}
		SQL_SaveAccountData(playerid);
	}
	return 1;
}
public OnPlayerSpawn(playerid) 
{
    if(IsPlayerNPC(playerid))
        return 1;

    if(!SurvivorData[playerid][pSpawned]) 
	{
        SurvivorData[playerid][pSpawned] = true;
    }
	GivePlayerWeapon(playerid, WEAPON_M4, 1337);
	SyncBackpackObject(playerid);
	ShowPlayerGUI(playerid);
    return 1;
}

public OnPlayerRequestClass(playerid, classid) 
{
    if(IsPlayerNPC(playerid))
        return 1;

    if(!SurvivorData[playerid][pSpawned]) 
	{
        SQL_CheckAccount(playerid);
    }
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == DIALOG_REGISTER)
	{
	    if(!response)
	        return Kick(playerid);

        if(strlen(inputtext) < 8) 
		{
            Server(playerid, "The password was too short! the minimum character is 8 character.");
            ShowRegisterDialog(playerid);
            return 1;
        }

        new query[452], hash[BCRYPT_HASH_LENGTH];

		bcrypt_get_hash(hash, sizeof(hash));

        mysql_format(sql_c, query, sizeof(query), "INSERT INTO `accounts` (`Username`, `Password`, `Salt`, `LastIP`, `CreationDate`) VALUES ('%e', '%e', '%s', '%e', '%e')", GetName(playerid), SurvivorData[playerid][pPassword], hash, ReturnIP(playerid), ReturnDate(true));
        mysql_tquery(sql_c, query, "OnAccountRegistered", "d", playerid);
	}
	if(dialogid == DIALOG_LOGIN)
	{
	    if(!response)
	        return Kick(playerid);

        if(isnull(inputtext))
            return ShowLoginDialog(playerid);

        new hash[BCRYPT_HASH_LENGTH];

        cache_get_value_name(0, "Password", hash, sizeof(hash));

        bcrypt_verify(playerid, "OnPlayerPasswordChecked", inputtext, hash);

        SurvivorData[playerid][pLoggedIn] = true;
	}
    if(dialogid == DIALOG_PICKUPITEM)
    {
		if(response)
		{
			new itemid = ListedItems[playerid][listitem];

			if(!LootData[itemid][lootExists]) 
			{
				return Server(playerid, "The item is no longer exists.");
			}
			if(IsBackpackItem(LootData[itemid][lootItem])) 
			{
				if(SurvivorData[playerid][pBackpack] >= GetItemBackpackLevel(LootData[itemid][lootItem])) 
					return Server(playerid, "You already have same or better backpack.");
		
				SurvivorData[playerid][pBackpack] = GetItemBackpackLevel(LootData[itemid][lootItem]);
				SyncBackpackObject(playerid);

				DestroyLoot(itemid);
				Server(playerid, "You have equipped a backpack, now you have %d inventory slots", GetPlayerLimitInventory(playerid));
				return 1;
			}
			if(AddLootToInventory(playerid, LootData[itemid][lootItem], LootData[itemid][lootAmount]) != -1) 
			{
				Server(playerid, "You have picked up %s (added to inventory)", LootData[itemid][lootItem]);
				DestroyLoot(itemid);
			}
		}
	}
	if(dialogid == DIALOG_INVENTORY)
	{
	    if(response)
	    {
			new itemid = ListedItems[playerid][listitem];
			ShowPlayerDialog(playerid, DIALOG_INVOPTION, DIALOG_STYLE_LIST, va_return("Item: %s", InventoryData[playerid][itemid][invName]), "Use\nMerge\nDrop", "Select", "Close");
			SetPVarInt(playerid, "ItemId", itemid);
		}
	}
	if(dialogid == DIALOG_INVOPTION)
	{
	    if(response)
	    {
			new itemid = GetPVarInt(playerid, "ItemId");
			if(listitem == 0) 
			{
				CallLocalFunction("OnPlayerUseItem", "dds", playerid, itemid, InventoryData[playerid][itemid][invName]);
			}
			if(listitem == 1) 
			{
				new same = GetInventorySameMerge(playerid, InventoryData[playerid][itemid][invName], itemid);

				if(same == -1)
					return Server(playerid, "There is no same item on your inventory.");

				InventoryData[playerid][same][invAmount] += InventoryData[playerid][itemid][invAmount];

				RemovePlayerInventory(playerid, itemid);
			}
			if(listitem == 2) 
			{
				if(!IsInventoryCanDrop(InventoryData[playerid][itemid][invName]))
					return Server(playerid, "You can't drop this item!");

				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);

				CreatePlayerLootDrop(InventoryData[playerid][itemid][invName], InventoryData[playerid][itemid][invAmount], x, y, z);
				Streamer_Update(playerid, STREAMER_TYPE_OBJECT);

				RemovePlayerInventory(playerid, itemid);
			}
		}
	}
	return 1;
}

ShowPlayerGUI(playerid) {
	for(new i = 0; i < 2; i++) {
		PlayerTextDrawShow(playerid, HBEGUI[playerid][i]);
	}

	PlayerTextDrawShow(playerid, HEALTHBAR[playerid]);
	PlayerTextDrawShow(playerid, ARMORBAR[playerid]);
	PlayerTextDrawShow(playerid, ARMORAMOUNT[playerid]);
	PlayerTextDrawShow(playerid, THIRSTBAR[playerid]);
	PlayerTextDrawShow(playerid, THIRSTAMOUNT[playerid]);
	PlayerTextDrawShow(playerid, HUNGERBAR[playerid]);
	PlayerTextDrawShow(playerid, HUNGERAMOUNT[playerid]);
}

CreatePlayerTD(playerid) 
{
	HBEGUI[playerid][0] = CreatePlayerTextDraw(playerid, 529.000000, 432.000000, "ld_dual:white");
	PlayerTextDrawFont(playerid, HBEGUI[playerid][0], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, HBEGUI[playerid][0], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, HBEGUI[playerid][0], 97.500000, 8.000000);
	PlayerTextDrawSetOutline(playerid, HBEGUI[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, HBEGUI[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, HBEGUI[playerid][0], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColour(playerid, HBEGUI[playerid][0], 1296911871);
	PlayerTextDrawBackgroundColour(playerid, HBEGUI[playerid][0], 255);
	PlayerTextDrawBoxColour(playerid, HBEGUI[playerid][0], 50);
	PlayerTextDrawUseBox(playerid, HBEGUI[playerid][0], true);
	PlayerTextDrawSetProportional(playerid, HBEGUI[playerid][0], true);
	PlayerTextDrawSetSelectable(playerid, HBEGUI[playerid][0], false);

	HEALTHBAR[playerid] = CreatePlayerTextDraw(playerid, 533.000000, 435.000000, "ld_dual:white");
	PlayerTextDrawFont(playerid, HEALTHBAR[playerid], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, HEALTHBAR[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, HEALTHBAR[playerid], 90.500000, 3.000000);
	PlayerTextDrawSetOutline(playerid, HEALTHBAR[playerid], 1);
	PlayerTextDrawSetShadow(playerid, HEALTHBAR[playerid], 0);
	PlayerTextDrawAlignment(playerid, HEALTHBAR[playerid], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColour(playerid, HEALTHBAR[playerid], -16777012);
	PlayerTextDrawBackgroundColour(playerid, HEALTHBAR[playerid], 255);
	PlayerTextDrawBoxColour(playerid, HEALTHBAR[playerid], 50);
	PlayerTextDrawUseBox(playerid, HEALTHBAR[playerid], true);
	PlayerTextDrawSetProportional(playerid, HEALTHBAR[playerid], true);
	PlayerTextDrawSetSelectable(playerid, HEALTHBAR[playerid], false);

	HBEGUI[playerid][1] = CreatePlayerTextDraw(playerid, 529.000000, 403.000000, "ld_dual:white");
	PlayerTextDrawFont(playerid, HBEGUI[playerid][1], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, HBEGUI[playerid][1], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, HBEGUI[playerid][1], 65.000000, 29.000000);
	PlayerTextDrawSetOutline(playerid, HBEGUI[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, HBEGUI[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, HBEGUI[playerid][1], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColour(playerid, HBEGUI[playerid][1], 1296911871);
	PlayerTextDrawBackgroundColour(playerid, HBEGUI[playerid][1], 255);
	PlayerTextDrawBoxColour(playerid, HBEGUI[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, HBEGUI[playerid][1], true);
	PlayerTextDrawSetProportional(playerid, HBEGUI[playerid][1], true);
	PlayerTextDrawSetSelectable(playerid, HBEGUI[playerid][1], false);

	ARMORBAR[playerid] = CreatePlayerTextDraw(playerid, 550.000000, 427.000000, "ld_dual:white");
	PlayerTextDrawFont(playerid, ARMORBAR[playerid], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, ARMORBAR[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, ARMORBAR[playerid], 38.000000, 3.000000);
	PlayerTextDrawSetOutline(playerid, ARMORBAR[playerid], 1);
	PlayerTextDrawSetShadow(playerid, ARMORBAR[playerid], 0);
	PlayerTextDrawAlignment(playerid, ARMORBAR[playerid], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColour(playerid, ARMORBAR[playerid], -52);
	PlayerTextDrawBackgroundColour(playerid, ARMORBAR[playerid], 255);
	PlayerTextDrawBoxColour(playerid, ARMORBAR[playerid], 50);
	PlayerTextDrawUseBox(playerid, ARMORBAR[playerid], true);
	PlayerTextDrawSetProportional(playerid, ARMORBAR[playerid], true);
	PlayerTextDrawSetSelectable(playerid, ARMORBAR[playerid], false);

	ARMORAMOUNT[playerid] = CreatePlayerTextDraw(playerid, 540.000000, 425.000000, "0%");
	PlayerTextDrawFont(playerid, ARMORAMOUNT[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ARMORAMOUNT[playerid], 0.137500, 0.650000);
	PlayerTextDrawTextSize(playerid, ARMORAMOUNT[playerid], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ARMORAMOUNT[playerid], 0);
	PlayerTextDrawSetShadow(playerid, ARMORAMOUNT[playerid], 0);
	PlayerTextDrawAlignment(playerid, ARMORAMOUNT[playerid], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawColour(playerid, ARMORAMOUNT[playerid], -1);
	PlayerTextDrawBackgroundColour(playerid, ARMORAMOUNT[playerid], 255);
	PlayerTextDrawBoxColour(playerid, ARMORAMOUNT[playerid], 50);
	PlayerTextDrawUseBox(playerid, ARMORAMOUNT[playerid], false);
	PlayerTextDrawSetProportional(playerid, ARMORAMOUNT[playerid], true);
	PlayerTextDrawSetSelectable(playerid, ARMORAMOUNT[playerid], false);

	THIRSTBAR[playerid] = CreatePlayerTextDraw(playerid, 550.000000, 418.000000, "ld_dual:white");
	PlayerTextDrawFont(playerid, THIRSTBAR[playerid], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, THIRSTBAR[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, THIRSTBAR[playerid], 38.000000, 3.000000);
	PlayerTextDrawSetOutline(playerid, THIRSTBAR[playerid], 1);
	PlayerTextDrawSetShadow(playerid, THIRSTBAR[playerid], 0);
	PlayerTextDrawAlignment(playerid, THIRSTBAR[playerid], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColour(playerid, THIRSTBAR[playerid], 1687547340);
	PlayerTextDrawBackgroundColour(playerid, THIRSTBAR[playerid], 255);
	PlayerTextDrawBoxColour(playerid, THIRSTBAR[playerid], 50);
	PlayerTextDrawUseBox(playerid, THIRSTBAR[playerid], true);
	PlayerTextDrawSetProportional(playerid, THIRSTBAR[playerid], true);
	PlayerTextDrawSetSelectable(playerid, THIRSTBAR[playerid], false);

	THIRSTAMOUNT[playerid] = CreatePlayerTextDraw(playerid, 540.000000, 416.000000, "0%");
	PlayerTextDrawFont(playerid, THIRSTAMOUNT[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, THIRSTAMOUNT[playerid], 0.137500, 0.650000);
	PlayerTextDrawTextSize(playerid, THIRSTAMOUNT[playerid], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, THIRSTAMOUNT[playerid], 0);
	PlayerTextDrawSetShadow(playerid, THIRSTAMOUNT[playerid], 0);
	PlayerTextDrawAlignment(playerid, THIRSTAMOUNT[playerid], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawColour(playerid, THIRSTAMOUNT[playerid], -1);
	PlayerTextDrawBackgroundColour(playerid, THIRSTAMOUNT[playerid], 255);
	PlayerTextDrawBoxColour(playerid, THIRSTAMOUNT[playerid], 50);
	PlayerTextDrawUseBox(playerid, THIRSTAMOUNT[playerid], false);
	PlayerTextDrawSetProportional(playerid, THIRSTAMOUNT[playerid], true);
	PlayerTextDrawSetSelectable(playerid, THIRSTAMOUNT[playerid], false);

	HUNGERBAR[playerid] = CreatePlayerTextDraw(playerid, 550.000000, 409.000000, "ld_dual:white");
	PlayerTextDrawFont(playerid, HUNGERBAR[playerid], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, HUNGERBAR[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, HUNGERBAR[playerid], 38.000000, 3.000000);
	PlayerTextDrawSetOutline(playerid, HUNGERBAR[playerid], 1);
	PlayerTextDrawSetShadow(playerid, HUNGERBAR[playerid], 0);
	PlayerTextDrawAlignment(playerid, HUNGERBAR[playerid], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColour(playerid, HUNGERBAR[playerid], -2686772);
	PlayerTextDrawBackgroundColour(playerid, HUNGERBAR[playerid], 255);
	PlayerTextDrawBoxColour(playerid, HUNGERBAR[playerid], 50);
	PlayerTextDrawUseBox(playerid, HUNGERBAR[playerid], true);
	PlayerTextDrawSetProportional(playerid, HUNGERBAR[playerid], true);
	PlayerTextDrawSetSelectable(playerid, HUNGERBAR[playerid], false);

	HUNGERAMOUNT[playerid] = CreatePlayerTextDraw(playerid, 540.000000, 407.000000, "0%");
	PlayerTextDrawFont(playerid, HUNGERAMOUNT[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, HUNGERAMOUNT[playerid], 0.137500, 0.650000);
	PlayerTextDrawTextSize(playerid, HUNGERAMOUNT[playerid], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, HUNGERAMOUNT[playerid], 0);
	PlayerTextDrawSetShadow(playerid, HUNGERAMOUNT[playerid], 0);
	PlayerTextDrawAlignment(playerid, HUNGERAMOUNT[playerid], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawColour(playerid, HUNGERAMOUNT[playerid], -1);
	PlayerTextDrawBackgroundColour(playerid, HUNGERAMOUNT[playerid], 255);
	PlayerTextDrawBoxColour(playerid, HUNGERAMOUNT[playerid], 50);
	PlayerTextDrawUseBox(playerid, HUNGERAMOUNT[playerid], false);
	PlayerTextDrawSetProportional(playerid, HUNGERAMOUNT[playerid], true);
	PlayerTextDrawSetSelectable(playerid, HUNGERAMOUNT[playerid], false);
}

CMD:gotoco(playerid, params[]) {
	new Float:x, Float:y, Float:z, interior;
	if(sscanf(params, "fffd", x, y, z, interior)) SendClientMessage(playerid,-1," /gotoco [x] [y] [npc] [interior]");

	SetPlayerPos(playerid, x, y, z);
	SetPlayerInterior(playerid, interior);

	return 1;
}

CMD:inv(playerid, params[]) {
	if(SurvivorData[playerid][pSpawned]) {
		ShowInventory(playerid);
	}
	return 1;
}

CMD:rev(playerid, params[]) {
	SurvivorData[playerid][pHealth] = float(5000);
	SurvivorData[playerid][pInjured] = 0;
	ClearAnimations(playerid);
	return 1;
}
/* Timer */

task OnDeerMove[5000]() {
	for(new i = 0; i < MAX_DEERS; i++) if(DeerData[i][deerState] == DEER_STATE_ALIVE) {

		new Float:pos[3];
		GetDynamicObjectPos(DeerData[i][deerObject], pos[0],pos[1],pos[2]);

		pos[0] += RandomFloat(2.0, -2.0);
		pos[1] += RandomFloat(2.0, -2.0);
		//MapAndreas_FindZ_For2DCoord(pos[0],pos[1],pos[2]);

		new Float:angle, Float:aX, Float:aY, Float:aZ;

		GetDynamicObjectPos(DeerData[i][deerObject], aX, aY, aZ);
		angle = atan2(pos[2]-aY, pos[0]-aX) - 90.0;
		MoveDynamicObject(DeerData[i][deerObject], pos[0],pos[1],pos[2], 5, 0.0, 0.0, angle);
	}
	return 1;
}
ptask OnPlayerCheck[1000](playerid) 
{
	if(SurvivorData[playerid][pSpawned]) 
	{
		if(SurvivorData[playerid][pInjured] && GetPlayerAnimationIndex(playerid) != 1701) 
		{
			ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.1, false, false, false, true, false, SYNC_ALL);
		}
		if(SurvivorData[playerid][pHealth] < 0.0)
		{
			SurvivorData[playerid][pHealth] = 1;
		}
	}
	return 1;
}
ptask OnPlayerGameUpdate[1000](playerid) {

	new hour, minute, second;
	gettime(hour, minute, second);
	SetPlayerTime(playerid, hour, minute);

	if(SurvivorData[playerid][pSpawned]) {
		SetPlayerHealth(playerid, 100.0);

		new Float:divided, Float:value;

		divided = floatdiv(90.500000, 10000);
		value = floatmul(SurvivorData[playerid][pHealth], divided);
		PlayerTextDrawTextSize(playerid, HEALTHBAR[playerid], value, 3.000000);
		PlayerTextDrawShow(playerid, HEALTHBAR[playerid]);

		divided = floatdiv(38.000000, 100);
		value = floatmul(SurvivorData[playerid][pThirst], divided);
		PlayerTextDrawTextSize(playerid, THIRSTBAR[playerid], value, 3.000000);
		PlayerTextDrawShow(playerid, THIRSTBAR[playerid]);

		PlayerTextDrawSetString(playerid, THIRSTAMOUNT[playerid],  va_return("%d%%", floatround(SurvivorData[playerid][pThirst])));

		divided = floatdiv(38.000000, 100);
		value = floatmul(SurvivorData[playerid][pHunger], divided);
		PlayerTextDrawTextSize(playerid, HUNGERBAR[playerid], value, 3.000000);
		PlayerTextDrawShow(playerid, HUNGERBAR[playerid]);

		PlayerTextDrawSetString(playerid, HUNGERAMOUNT[playerid],  va_return("%d%%", floatround(SurvivorData[playerid][pHunger])));

		divided = floatdiv(38.000000, 100);
		value = floatmul(SurvivorData[playerid][pArmour], divided);
		PlayerTextDrawTextSize(playerid, ARMORBAR[playerid], value, 3.000000);
		PlayerTextDrawShow(playerid, ARMORBAR[playerid]);

		PlayerTextDrawSetString(playerid, ARMORAMOUNT[playerid],  va_return("%d%%", floatround(SurvivorData[playerid][pArmour])));
	}
	return 1;
}